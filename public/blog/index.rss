<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Andreas Petersell</title>
    <link>http://localhost:1313/blog/</link>
    <description>Recent content on Andreas Petersell</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de</language>
    <copyright>Sämtliche Beiträge stehen unter einer [Creative Commons Namensnennung 4.0 International Lizenz](https://creativecommons.org/licenses/by/4.0/).</copyright>
    <lastBuildDate>Mon, 15 Sep 2025 00:00:00 +0000</lastBuildDate>
    <docs>https://cyber.harvard.edu/rss/rss.html</docs>
    
        <atom:link href="http://localhost:1313/blog/index.rss" rel="self" type="application/rss+xml" />
    
    
    
    <item>
      <title>Asciidoc mit Docker bauen</title>
      <link>http://localhost:1313/blog/asciidoc-mit-docker/</link>
      <category>asciidoc</category>
      <category>techcomm</category>
      <category>docker</category>
      <pubDate>Mon, 15 Sep 2025 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/asciidoc-mit-docker/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Sie müssen nicht für jedes Output-Format des Asciidoctors ein Extra-Tool installieren. Sie brauchen eigentlich nur ein Docker-Image nutzen, egal welchen Output Sie aus Ihren adoc-Dateien generieren wollen.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Diese Quelle ermöglichte mir den Artikel: &lt;a href=&#34;https://github.com/asciidoctor/docker-asciidoctor&#34;&gt;Asciidoctor Docker Container&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Tip&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Voraussetzung&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Sie haben Docker installiert.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_kontext&#34;&gt;Kontext&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Da ich im Zusammenhang mit DITA XML bereits Docker installiert hatte, wußte ich, dass es für adoc-Dateien einen ähnlichen Weg des Bauens über ein Docker-Image geben müßte.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Das gibt es. Und das Schönes ist, dass der Build via Docker verschiedene Ausgabeformate abdeckt: HTML, PDF, EPUB3 und Confluence uvm.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_anleitung&#34;&gt;Anleitung&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Docker im Terminal starten: &lt;code&gt;sudo systemctl start docker&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Buildbefehl eingeben + ENTER&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Im Output-Ordner das Ergebnis bestaunen&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_buildbefehl_anpassen&#34;&gt;Buildbefehl anpassen&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In der readme-Datei des Projekts heißt es:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Build-Befehl in der Dokumentation&lt;/div&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;docker run -it \
  -u $(id -u):$(id -g) \
  -v &amp;lt;your directory&amp;gt;:/documents/ asciidoctor/docker-asciidoctor&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Diese Beispiel-Syntax gilt es anzupassen. Den Part &lt;code&gt;-u $(id -u):$(id -g)&lt;/code&gt; sollten Sie in Ihrem Build-Befehl übernehmen. Er sorgt dafür, dass das Output-Verzeichnis editierbar ist. So können Sie z.B. einen Image-Ordner einfügen, wenn nötig.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Mein angepaßter Build-Befehl&lt;/div&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;docker run --rm \
  -u $(id -u):$(id -g) \
  -v ~/sync/asciidoc:/documents asciidoctor/docker-asciidoctor \ &lt;b class=&#34;conum&#34;&gt;(1)&lt;/b&gt;
  asciidoctor -v -D /documents/homepage/output/ /documents/homepage/&amp;#39;**/*.adoc&amp;#39; &lt;b class=&#34;conum&#34;&gt;(2)&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Mein lokaler Ordner &lt;code&gt;sync/asciidoc&lt;/code&gt; wird mit dem Ordner &lt;code&gt;documents&lt;/code&gt; des Containers verbunden (mounted) und das Image &lt;em&gt;asciidoctor/docker-asciidoctor&lt;/em&gt; wird benutzt.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Es wird HTML-Output erzeugt in meinem lokalen Ordner &lt;code&gt;sync/asciidoc/homepage/output&lt;/code&gt;, denn &lt;em&gt;documents&lt;/em&gt; ist ja gleichbedeutend mit &lt;em&gt;sync/asciidoc&lt;/em&gt;. Da ich nicht nur eine, sondern mehrere adoc-Dateien hatte, musste ich bei der Quelldatei-Angabe am Ende mit der &lt;a href=&#34;https://docs.asciidoctor.org/asciidoctor/latest/cli/process-multiple-files/&#34;&gt;Wildcard-Syntax&lt;/a&gt; arbeiten.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_fazit&#34;&gt;Fazit&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Ich habe mir die Installation sämtlicher Asciidoctor-Build-Tools erspart und brauche mich nicht um Updates zu kümmern. Einfach Docker starten, Buildbefehl eingeben und mehrere Output-Formate erhalten.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Verification of your Subdomain for a gitlab Project</title>
      <link>http://localhost:1313/blog/verification-of-your-subdomain-for-gitlab-project/</link>
      <category>hugo</category>
      <category>blogging</category>
      <pubDate>Mon, 19 May 2025 15:40:36 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/verification-of-your-subdomain-for-gitlab-project/</guid>
      <description>&lt;p&gt;You have a project on gitlab with the URL &lt;em&gt;myname.gitlab.io/project&lt;/em&gt; and would now like to redirect your subdomain &lt;em&gt;&lt;a href=&#34;https://www.myname.com&#34;&gt;www.myname.com&lt;/a&gt;&lt;/em&gt; to your project in addition to your root domain &lt;em&gt;myname.com&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Quelle: &lt;a href=&#34;https://docs.gitlab.com/user/project/pages/custom_domains_ssl_tls_certification/&#34;&gt;GitLab Pages custom domains&lt;/a&gt;&lt;/p&gt;
&lt;!-- FM:Snippet:Start data:{&#34;id&#34;:&#34;Admonition - Voraussetzung&#34;,&#34;fields&#34;:[]} --&gt;
&lt;style type=&#34;text/css&#34;&gt;
     
    .notice {
        --title-color: #fff;
        --title-background-color: #6be;
        --content-color: #444;
        --content-background-color: #e7f2fa;
    }

    .notice.comment {
        --title-background-color: #99bda2;
        --content-background-color: #efe;
    }

    .notice.info {
        --title-background-color: #fb7;
        --content-background-color: #fec;
    }

    .notice.tip {
        --title-background-color: #5a5;
        --content-background-color: #efe;
    }

    .notice.warning {
        --title-background-color: #c33;
        --content-background-color: #fee;
    }


     
    .notice {
        padding: 18px;
        line-height: 24px;
        margin-bottom: 24px;
        margin-top: 26px;
        border-radius: 4px;
        color: var(--content-color);
        background: var(--content-background-color);
    }

    .notice p:last-child {
        margin-bottom: 0
    }

     
    .notice-title {
        margin: -18px -18px 12px;
        padding: 4px 18px;
        border-radius: 4px 4px 0 0;
        font-weight: 700;
        color: var(--title-color);
        background: var(--title-background-color);
    }

     
    .icon-notice {
        display: inline-flex;
        align-self: center;
        margin-right: 8px;
    }

    .icon-notice img,
    .icon-notice svg {
        height: 1em;
        width: 1em;
        fill: currentColor;
    }

    .icon-notice img,
    .icon-notice.baseline svg {
        top: .125em;
        position: relative;
    }
&lt;/style&gt;&lt;div class=&#34;notice info&#34; &gt;
    &lt;p class=&#34;notice-title&#34;&gt;
        &lt;span class=&#34;icon-notice baseline&#34;&gt;
            &lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;92 59.5 300 300&#34;&gt;
  &lt;path d=&#34;M292 303.25V272c0-3.516-2.734-6.25-6.25-6.25H267v-100c0-3.516-2.734-6.25-6.25-6.25h-62.5c-3.516 0-6.25 2.734-6.25 6.25V197c0 3.516 2.734 6.25 6.25 6.25H217v62.5h-18.75c-3.516 0-6.25 2.734-6.25 6.25v31.25c0 3.516 2.734 6.25 6.25 6.25h87.5c3.516 0 6.25-2.734 6.25-6.25Zm-25-175V97c0-3.516-2.734-6.25-6.25-6.25h-37.5c-3.516 0-6.25 2.734-6.25 6.25v31.25c0 3.516 2.734 6.25 6.25 6.25h37.5c3.516 0 6.25-2.734 6.25-6.25Zm125 81.25c0 82.813-67.188 150-150 150-82.813 0-150-67.188-150-150 0-82.813 67.188-150 150-150 82.813 0 150 67.188 150 150Z&#34;/&gt;
&lt;/svg&gt;

        &lt;/span&gt;Voraussetzung&lt;/p&gt;&lt;p&gt;You have access to the DNS entries of your domains with your web hosting service provider.&lt;/p&gt;&lt;/div&gt;

&lt;!-- FM:Snippet:End --&gt;
&lt;h3 id=&#34;cname-worked-fine&#34;&gt;CNAME worked fine&lt;/h3&gt;
&lt;p&gt;This is not a guide, as every web host service provider uses different forms to enter the various DNS entries.&lt;/p&gt;
&lt;p&gt;Mine uses the following values:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Subdomain&lt;/th&gt;
&lt;th&gt;Domain&lt;/th&gt;
&lt;th&gt;Typ&lt;/th&gt;
&lt;th&gt;Content&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;www&lt;/td&gt;
&lt;td&gt;myname.com&lt;/td&gt;
&lt;td&gt;CNAME&lt;/td&gt;
&lt;td&gt;myname.gitlab.io.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;And so the CNAME entry worked immediately.&lt;/p&gt;
&lt;h3 id=&#34;verification-by-trial-and-error&#34;&gt;Verification by trial and error&lt;/h3&gt;
&lt;p&gt;But it took me days to complete the verification. The Gitlab documentation uses this syntax as a default and alludes to the command line level.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;_gitlab-pages-verification-code.www.myname.com TXT gitlab-pages-verification-code=31e837733dd7174ada938b64
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;However, this example is not clear when filling in the form above. After several attempts, the following entry in the table worked.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Subdomain&lt;/th&gt;
&lt;th&gt;Domain&lt;/th&gt;
&lt;th&gt;Typ&lt;/th&gt;
&lt;th&gt;Content&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;_gitlab-pages-verification-code.www&lt;/td&gt;
&lt;td&gt;myname.com&lt;/td&gt;
&lt;td&gt;TXT&lt;/td&gt;
&lt;td&gt;gitlab-pages-verification-code=31e837733dd7174ada938b64&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The verification status finally turned green: &lt;em&gt;Verified!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;At &lt;a href=&#34;https://dnschecker.org/&#34;&gt;https://dnschecker.org/&lt;/a&gt; you can check whether the TXT entries are recognized. Fill in &lt;em&gt;_gitlab-pages-verification-code.www.myname.com&lt;/em&gt; and select &lt;em&gt;TXT&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DITA-XML mit VS Code validieren</title>
      <link>http://localhost:1313/blog/dita-xml-mit-vscode-validieren/</link>
      <category>dita-xml</category>
      <category>techcomm</category>
      <pubDate>Wed, 02 Apr 2025 19:31:50 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/dita-xml-mit-vscode-validieren/</guid>
      <description>&lt;p&gt;Um Visual Studio Code als Quelltext-Editor für DITA-XML-Dateien mit allen Annehmlichkeiten wie z.B. der Validierung nutzen zu können, müssen in den Einstellungen des Programms, genauer in der &lt;code&gt;settings.json&lt;/code&gt;, drei Einträge vorgenommen werden.&lt;/p&gt;
&lt;p&gt;Damit ich bei der nächsten PC-Einrichtung nicht wieder anfange zu suchen, schreibe ich es jetzt auf.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/no-validation.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Leider weiß ich nicht immer, welche DITA-Tags in welche Reihenfolge gehören. Eine zeitnahe Validierung der DITA-Synstax ist also sehr hilfreich.&lt;/p&gt;
&lt;p&gt;Quellen:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/64782816/how-can-i-make-dita-catalog-xml-work-in-vs-code&#34;&gt;How can I make dita-catalog.xml work in vscode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.baeldung.com/find-java-home&#34;&gt;How to find JAVA_HOME&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;einstellungen-von-vs-code-komplettieren&#34;&gt;Einstellungen von VS Code komplettieren&lt;/h3&gt;
&lt;!-- FM:Snippet:Start data:{&#34;id&#34;:&#34;Admonition - Voraussetzung&#34;,&#34;fields&#34;:[]} --&gt;
&lt;style type=&#34;text/css&#34;&gt;
     
    .notice {
        --title-color: #fff;
        --title-background-color: #6be;
        --content-color: #444;
        --content-background-color: #e7f2fa;
    }

    .notice.comment {
        --title-background-color: #99bda2;
        --content-background-color: #efe;
    }

    .notice.info {
        --title-background-color: #fb7;
        --content-background-color: #fec;
    }

    .notice.tip {
        --title-background-color: #5a5;
        --content-background-color: #efe;
    }

    .notice.warning {
        --title-background-color: #c33;
        --content-background-color: #fee;
    }


     
    .notice {
        padding: 18px;
        line-height: 24px;
        margin-bottom: 24px;
        margin-top: 26px;
        border-radius: 4px;
        color: var(--content-color);
        background: var(--content-background-color);
    }

    .notice p:last-child {
        margin-bottom: 0
    }

     
    .notice-title {
        margin: -18px -18px 12px;
        padding: 4px 18px;
        border-radius: 4px 4px 0 0;
        font-weight: 700;
        color: var(--title-color);
        background: var(--title-background-color);
    }

     
    .icon-notice {
        display: inline-flex;
        align-self: center;
        margin-right: 8px;
    }

    .icon-notice img,
    .icon-notice svg {
        height: 1em;
        width: 1em;
        fill: currentColor;
    }

    .icon-notice img,
    .icon-notice.baseline svg {
        top: .125em;
        position: relative;
    }
&lt;/style&gt;&lt;div class=&#34;notice info&#34; &gt;
    &lt;p class=&#34;notice-title&#34;&gt;
        &lt;span class=&#34;icon-notice baseline&#34;&gt;
            &lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;92 59.5 300 300&#34;&gt;
  &lt;path d=&#34;M292 303.25V272c0-3.516-2.734-6.25-6.25-6.25H267v-100c0-3.516-2.734-6.25-6.25-6.25h-62.5c-3.516 0-6.25 2.734-6.25 6.25V197c0 3.516 2.734 6.25 6.25 6.25H217v62.5h-18.75c-3.516 0-6.25 2.734-6.25 6.25v31.25c0 3.516 2.734 6.25 6.25 6.25h87.5c3.516 0 6.25-2.734 6.25-6.25Zm-25-175V97c0-3.516-2.734-6.25-6.25-6.25h-37.5c-3.516 0-6.25 2.734-6.25 6.25v31.25c0 3.516 2.734 6.25 6.25 6.25h37.5c3.516 0 6.25-2.734 6.25-6.25Zm125 81.25c0 82.813-67.188 150-150 150-82.813 0-150-67.188-150-150 0-82.813 67.188-150 150-150 82.813 0 150 67.188 150 150Z&#34;/&gt;
&lt;/svg&gt;

        &lt;/span&gt;Voraussetzung&lt;/p&gt;&lt;p&gt;Sie haben Java und ein DITA-Open-Toolkit installiert.&lt;/p&gt;&lt;/div&gt;

&lt;!-- FM:Snippet:End --&gt;
&lt;p&gt;Es gilt, diese drei Einstellungen hinzuzufügen:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Pfad zum Java-Programm&lt;/li&gt;
&lt;li&gt;Pfad zur Datei &lt;code&gt;catalog-dita.xml&lt;/code&gt; im DITA-OT-Verzeichnis&lt;/li&gt;
&lt;li&gt;Aktiveren des Kontrollkästchen &lt;em&gt;xml.validation.resolveExternalEntities&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;1-pfad-zum-java-programm&#34;&gt;(1) Pfad zum Java-Programm&lt;/h4&gt;
&lt;p&gt;Da ich mit Linux Fedora arbeite, gab &lt;a target=&#34;_blank&#34; href=&#34;https://www.baeldung.com/find-java-home&#34;&gt;dieser Befehl&lt;/a&gt;
im Terminal-Fenster meinen JAVA_HOME-Pfad zurück:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ java -XshowSettings:properties -version 2&amp;gt;&amp;amp;1 &amp;gt; /dev/null | grep &amp;#39;java.home&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;2-pfad-zur-catalog-datei&#34;&gt;(2) Pfad zur catalog-Datei&lt;/h4&gt;
&lt;p&gt;Da ich mit Linux Fedora arbeite, diese Syntax der Schrägstriche.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;#34;xml.catalogs&amp;#34;: [
	&amp;#34;/home/andreas/Programme/dita-ot-4.1.2/catalog-dita.xml&amp;#34;
],
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;3-kontrollkästchen-für-validation-aktiveren&#34;&gt;(3) Kontrollkästchen für Validation aktiveren&lt;/h4&gt;
&lt;p&gt;In der Oberfläche das Kontrollkästchen aktiveren für &lt;em&gt;xml.validation.resolveExternalEntities&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/kontrollkaestchen-aktivieren.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Zum Schluss VS Code neu starten.&lt;/p&gt;
&lt;h4 id=&#34;erbebnis&#34;&gt;Erbebnis&lt;/h4&gt;
&lt;p&gt;In der Datei &lt;code&gt;settings.json&lt;/code&gt; sah die Notation bei mir so aus:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;#34;xml.catalogs&amp;#34;: [
	&amp;#34;/home/andreas/Programme/dita-ot-4.1.2/catalog-dita.xml&amp;#34;
],
&amp;#34;xml.java.home&amp;#34;: &amp;#34;/usr/lib/jvm/java-21-openjdk&amp;#34;,
&amp;#34;xml.validation.resolveExternalEntities&amp;#34;: true
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Jetzt bekomme ich sofort Fehlerhinweise, wenn meine DITA-Syntax nicht stimmt. Auch werden mir beim Schreiben im Kontextmenü mögliche korrekte Tags vorgeschlagen. Ein entspannteres Arbeiten als DITA-Redakteur ist möglich.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Admonitions in Markdown</title>
      <link>http://localhost:1313/blog/hugo-admonitions-in-markdown/</link>
      <category>hugo</category>
      <category>techcomm</category>
      <category>blogging</category>
      <pubDate>Sat, 07 Dec 2024 11:38:27 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/hugo-admonitions-in-markdown/</guid>
      <description>&lt;p&gt;In Markdown gibt es keine Möglichkeit, farbig umrahmte Absätze für Hinweise, Warnungen, Infos und Tipps zu gestalten. In Hugo bietet sich aber diese Möglichkeit durch sogenannte Shortcodes.&lt;/p&gt;
&lt;p&gt;Sogenannte Shortcodes werden in einer HTML-Datei abgelegt und müssen im Markdown-Content auf spezielle Weise eingefügt werden.&lt;/p&gt;
&lt;p&gt;Quelle: &lt;a target=&#34;_blank&#34; href=&#34;https://github.com/martignoni/hugo-notice&#34;&gt;hugo-notice von Nicolas Martignoni&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;anleitung&#34;&gt;Anleitung&lt;/h2&gt;
&lt;p&gt;Da ich mein Template &lt;strong&gt;nicht&lt;/strong&gt; im Ordner &lt;code&gt;themes&lt;/code&gt; als git-submodule betreibe, kopiere ich alles in meinen lokalen &lt;code&gt;layouts&lt;/code&gt;-Ordner und synchronisiere diesen zugleich mit meinen Content-Dateien.&lt;/p&gt;
&lt;style type=&#34;text/css&#34;&gt;
     
    .notice {
        --title-color: #fff;
        --title-background-color: #6be;
        --content-color: #444;
        --content-background-color: #e7f2fa;
    }

    .notice.comment {
        --title-background-color: #99bda2;
        --content-background-color: #efe;
    }

    .notice.info {
        --title-background-color: #fb7;
        --content-background-color: #fec;
    }

    .notice.tip {
        --title-background-color: #5a5;
        --content-background-color: #efe;
    }

    .notice.warning {
        --title-background-color: #c33;
        --content-background-color: #fee;
    }


     
    .notice {
        padding: 18px;
        line-height: 24px;
        margin-bottom: 24px;
        margin-top: 26px;
        border-radius: 4px;
        color: var(--content-color);
        background: var(--content-background-color);
    }

    .notice p:last-child {
        margin-bottom: 0
    }

     
    .notice-title {
        margin: -18px -18px 12px;
        padding: 4px 18px;
        border-radius: 4px 4px 0 0;
        font-weight: 700;
        color: var(--title-color);
        background: var(--title-background-color);
    }

     
    .icon-notice {
        display: inline-flex;
        align-self: center;
        margin-right: 8px;
    }

    .icon-notice img,
    .icon-notice svg {
        height: 1em;
        width: 1em;
        fill: currentColor;
    }

    .icon-notice img,
    .icon-notice.baseline svg {
        top: .125em;
        position: relative;
    }
&lt;/style&gt;&lt;div class=&#34;notice info&#34; &gt;
    &lt;p class=&#34;notice-title&#34;&gt;
        &lt;span class=&#34;icon-notice baseline&#34;&gt;
            &lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;92 59.5 300 300&#34;&gt;
  &lt;path d=&#34;M292 303.25V272c0-3.516-2.734-6.25-6.25-6.25H267v-100c0-3.516-2.734-6.25-6.25-6.25h-62.5c-3.516 0-6.25 2.734-6.25 6.25V197c0 3.516 2.734 6.25 6.25 6.25H217v62.5h-18.75c-3.516 0-6.25 2.734-6.25 6.25v31.25c0 3.516 2.734 6.25 6.25 6.25h87.5c3.516 0 6.25-2.734 6.25-6.25Zm-25-175V97c0-3.516-2.734-6.25-6.25-6.25h-37.5c-3.516 0-6.25 2.734-6.25 6.25v31.25c0 3.516 2.734 6.25 6.25 6.25h37.5c3.516 0 6.25-2.734 6.25-6.25Zm125 81.25c0 82.813-67.188 150-150 150-82.813 0-150-67.188-150-150 0-82.813 67.188-150 150-150 82.813 0 150 67.188 150 150Z&#34;/&gt;
&lt;/svg&gt;

        &lt;/span&gt;Voraussetzung&lt;/p&gt;&lt;p&gt;Sie müssen in der &lt;code&gt;config.toml&lt;/code&gt; angeben, ob Sie auf Ihrer Webseite mit einer Standardsprache arbeiten, oder mehrere, nahezu gleichberechtigte Sprachen nutzen. Da ich Deutsch als Standardsprache nutze, habe ich in die &lt;code&gt;config.toml&lt;/code&gt; diesen Eintrag hinzugefügt: &lt;code&gt;defaultContentLanguage = &#39;de&#39;&lt;/code&gt;.&lt;/p&gt;&lt;/div&gt;

&lt;h3 id=&#34;einmaliges-einrichten&#34;&gt;Einmaliges Einrichten&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;(1)&lt;/strong&gt; - Laden Sie das Zip-Archiv vom &lt;a href=&#34;https://github.com/martignoni/hugo-notice&#34;&gt;git-Repository hugo-notice&lt;/a&gt; herunter und entpacken Sie es.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;(2)&lt;/strong&gt; - Legen Sie die Datei &lt;code&gt;notice.html&lt;/code&gt; in den Ordner &lt;code&gt;layouts/shortcodes&lt;/code&gt; ab.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;(3)&lt;/strong&gt; - Kopieren Sie den Ordner &lt;code&gt;icons&lt;/code&gt; in Ihren Hauptordner des Repositorys, also auf gleicher Ebene wie den den Ordner &lt;code&gt;layouts&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;(4)&lt;/strong&gt; - Kopieren Sie den Ordner &lt;code&gt;i18n&lt;/code&gt; in Ihren Hauptordner des Repositorys, also auf gleicher Ebene wie den den Ordner &lt;code&gt;layouts&lt;/code&gt;. Löschen Sie die Dateien für die Sprachen, die Sie bestimmt nicht nutzen. Bei mir blieb nur die &lt;code&gt;de.yaml&lt;/code&gt; übrig.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;(5)&lt;/strong&gt; - Editieren Sie im Ordner &lt;code&gt;i18n&lt;/code&gt; die Datei &lt;code&gt;de.yaml&lt;/code&gt;, so denn nötig. Ich habe z.B. die Übersetzung vom gelben Kasten &lt;em&gt;Information&lt;/em&gt; auf &lt;em&gt;Voraussetzung&lt;/em&gt; geändert.&lt;/p&gt;
&lt;h3 id=&#34;anwenden-im-markdown-content&#34;&gt;Anwenden im Markdown-Content&lt;/h3&gt;
&lt;p&gt;Sobald Sie die Admonitions benutzen möchten, fügen Sie z.B. für obiges gelbes Kästchen folgende Notation in Ihre Content-Datei ein:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;{{&amp;lt; notice info &amp;gt;}}
Sie müssen in der `config.toml` angeben, ob Sie auf Ihrer Webseite ...
{{&amp;lt; /notice &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;beispiel-für-eine-warnung&#34;&gt;Beispiel für eine Warnung&lt;/h3&gt;
&lt;div class=&#34;notice warning&#34; &gt;
    &lt;p class=&#34;notice-title&#34;&gt;
        &lt;span class=&#34;icon-notice baseline&#34;&gt;
            &lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;126 76.5 300 300&#34;&gt;
  &lt;path d=&#34;M297.431 324.397v-34.255c0-3.245-2.344-5.95-5.358-5.95h-32.146c-3.014 0-5.358 2.705-5.358 5.95v34.255c0 3.245 2.344 5.95 5.358 5.95h32.146c3.014 0 5.358-2.705 5.358-5.95Zm-.335-67.428 3.014-82.753c0-1.081-.502-2.524-1.674-3.425-1.005-.902-2.512-1.983-4.019-1.983h-36.834c-1.507 0-3.014 1.081-4.019 1.983-1.172.901-1.674 2.704-1.674 3.786l2.846 82.392c0 2.344 2.512 4.146 5.693 4.146h30.975c3.013 0 5.525-1.803 5.692-4.146Zm-2.344-168.39L423.34 342.425c3.683 7.032 3.516 15.686-.335 22.717-3.85 7.031-10.883 11.358-18.417 11.358H147.413c-7.534 0-14.566-4.327-18.417-11.358-3.85-7.031-4.018-15.685-.335-22.716L257.248 88.578C260.93 81.188 268.13 76.5 276 76.5c7.87 0 15.069 4.688 18.752 12.08Z&#34;/&gt;
&lt;/svg&gt;

        &lt;/span&gt;Warnung&lt;/p&gt;&lt;p&gt;This is a warning notice. Be warned!&lt;/p&gt;&lt;/div&gt;

&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;{{&amp;lt; notice warning &amp;gt;}}
This is a warning notice. Be warned!
{{&amp;lt; /notice &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;weitere-quellen&#34;&gt;Weitere Quellen&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://discourse.gohugo.io/t/i-need-help-with-i18n-translate-shortcode/39858&#34;&gt;Fehler bei Übersetzungen von Shortcodes &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/templates/shortcode/&#34;&gt;gohugo.io - Create your own shortcodes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Templates nutzen in FrontMatter CMS</title>
      <link>http://localhost:1313/blog/templates-nutzen-in-frontmatter-cms/</link>
      <category>hugo</category>
      <category>blogging</category>
      <pubDate>Wed, 04 Dec 2024 19:41:27 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/templates-nutzen-in-frontmatter-cms/</guid>
      <description>&lt;p&gt;Bisher habe ich meine Asciidoc- und Markdown-Dateien in VSCode erstellt. Das macht aber nicht so viel Spaß. Nun habe ich das &lt;a href=&#34;https://route360.dev/en/post/frontmatter-cms/&#34;&gt;Headless-CMS&lt;/a&gt; FrontMatter entdeckt. Statt zu tippen klicke ich jetzt auf Schaltflächen.&lt;/p&gt;
&lt;p&gt;Erstellen Sie schnell auf Grundlage einer Markdown-Datei (template) eine Kopie dieser mit neuem Dateinamen. Die Dokumentation spricht zwar vom Einsatz von Templates. Aber nirgendwo steht, wie man die eingerichteten Templates benutzt! Bis ich die Vorgehensweise zufällig im Video &lt;em&gt;How you can use content-types in Front Matter CMS&lt;/em&gt; vom Entwickler Elio Struyf entdeckte.&lt;/p&gt;
&lt;style type=&#34;text/css&#34;&gt;
     
    .notice {
        --title-color: #fff;
        --title-background-color: #6be;
        --content-color: #444;
        --content-background-color: #e7f2fa;
    }

    .notice.comment {
        --title-background-color: #99bda2;
        --content-background-color: #efe;
    }

    .notice.info {
        --title-background-color: #fb7;
        --content-background-color: #fec;
    }

    .notice.tip {
        --title-background-color: #5a5;
        --content-background-color: #efe;
    }

    .notice.warning {
        --title-background-color: #c33;
        --content-background-color: #fee;
    }


     
    .notice {
        padding: 18px;
        line-height: 24px;
        margin-bottom: 24px;
        margin-top: 26px;
        border-radius: 4px;
        color: var(--content-color);
        background: var(--content-background-color);
    }

    .notice p:last-child {
        margin-bottom: 0
    }

     
    .notice-title {
        margin: -18px -18px 12px;
        padding: 4px 18px;
        border-radius: 4px 4px 0 0;
        font-weight: 700;
        color: var(--title-color);
        background: var(--title-background-color);
    }

     
    .icon-notice {
        display: inline-flex;
        align-self: center;
        margin-right: 8px;
    }

    .icon-notice img,
    .icon-notice svg {
        height: 1em;
        width: 1em;
        fill: currentColor;
    }

    .icon-notice img,
    .icon-notice.baseline svg {
        top: .125em;
        position: relative;
    }
&lt;/style&gt;&lt;div class=&#34;notice tip&#34; &gt;
    &lt;p class=&#34;notice-title&#34;&gt;
        &lt;span class=&#34;icon-notice baseline&#34;&gt;
            &lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;300.5 134 300 300&#34;&gt;
  &lt;path d=&#34;M551.281 252.36c0-3.32-1.172-6.641-3.515-8.985l-17.774-17.578c-2.344-2.344-5.469-3.711-8.789-3.711-3.32 0-6.445 1.367-8.789 3.71l-79.687 79.493-44.141-44.14c-2.344-2.344-5.469-3.712-8.79-3.712-3.32 0-6.444 1.368-8.788 3.711l-17.774 17.579c-2.343 2.343-3.515 5.664-3.515 8.984 0 3.32 1.172 6.445 3.515 8.789l70.704 70.703c2.343 2.344 5.664 3.711 8.789 3.711 3.32 0 6.64-1.367 8.984-3.71l106.055-106.056c2.343-2.343 3.515-5.468 3.515-8.789ZM600.5 284c0 82.813-67.188 150-150 150-82.813 0-150-67.188-150-150 0-82.813 67.188-150 150-150 82.813 0 150 67.188 150 150Z&#34;/&gt;
&lt;/svg&gt;

        &lt;/span&gt;Tipp&lt;/p&gt;&lt;p&gt;Wenn Sie vorhaben, über die Schaltfläche &lt;em&gt;Create Template&lt;/em&gt; ein Template zu erstellen, sichern Sie sich zuvor die Datei &lt;code&gt;frontmatter.json&lt;/code&gt;. Denn diese Vorgehensweise überschreibt gern diese Datei. Die folgende Anleitung verzichtet auf den Einsatz dieser Aktionsschaltfläche.&lt;/p&gt;&lt;/div&gt;

&lt;h3 id=&#34;template-erstellen&#34;&gt;Template erstellen&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;(1)&lt;/strong&gt; - Erstellen Sie einmalig einen Ordner &lt;code&gt;.frontmatter/templates&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;(2)&lt;/strong&gt; - Kopieren Sie eine Markdown-Datei in diesen neuen Ordner &lt;code&gt;templates&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;(3)&lt;/strong&gt; - Passen Sie die Datei so an, dass sie Ihren Vorstellungen eines Templates enspricht. &lt;a href=&#34;https://frontmatter.codes/docs/content-creation/placeholders&#34;&gt;Platzhalter&lt;/a&gt; wie in der Datei &lt;code&gt;frontmatter.json&lt;/code&gt; sind nicht möglich.&lt;/p&gt;
&lt;p&gt;Sie können beliebig viele Template-Dateien erstellen. Beim Benutzen der Templates werden diese Ihnen in einer Auswahlliste angeboten.&lt;/p&gt;
&lt;h3 id=&#34;template-benutzen&#34;&gt;Template benutzen&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;(1)&lt;/strong&gt; - Klicken Sie in der linken Symbolschaltflächen-Leiste auf das Icon &lt;em&gt;Explorer&lt;/em&gt; und wechseln Sie in den VSCode-Dateiexplorer.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;(2)&lt;/strong&gt; - Machen Sie einen rechten Mausklick auf den Content-Ordner, in der die neue Markdown-Datei angelegt werden soll. Z.B. &lt;code&gt;content/blog&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;(3)&lt;/strong&gt; - Wählen Sie im Kontextmenü den Eintrag &lt;em&gt;Frontmatter &amp;gt; New Article from template&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;(4)&lt;/strong&gt; - Wählen Sie die entsprechende Template-Datei aus, auf dessen Grundlage die neue Datei entstehen soll.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;(5)&lt;/strong&gt; - Editieren Sie die Datei wie gewohnt und passen Sie den YAML-Header an.&lt;/p&gt;
&lt;h3 id=&#34;weitere-quellen&#34;&gt;Weitere Quellen&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=oA5ocNaiAtY&#34;&gt;Video: How you can use content-types in Front Matter CMS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://frontmatter.codes/&#34;&gt;Frontmatter CMS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Hugo - Link im neuen Tab öffnen lassen</title>
      <link>http://localhost:1313/blog/hugo-cms-link-im-neuen-tab-oeffnen/</link>
      <category>hugo</category>
      <category>blogging</category>
      <pubDate>Mon, 02 Dec 2024 18:13:16 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/hugo-cms-link-im-neuen-tab-oeffnen/</guid>
      <description>&lt;p&gt;In Markdown kann man standardmäßig nur Links zu Webseiten erstellen, die im selben Tab öffnen, nicht jedoch in einem neuen Tab geöffnet werden mit Hilfe des Attributs &lt;code&gt;target=&amp;quot;_blank&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Da ich inzwischen für das Schreiben meiner Hugo-Blogposts das Headless-CMS &lt;a href=&#34;https://frontmatter.codes&#34;&gt;Frontmatter&lt;/a&gt; nutze, möchte ich für einfache Texte wieder vermehrt Markdown nutzen.&lt;/p&gt;
&lt;p&gt;Quelle: &lt;a href=&#34;https://discourse.gohugo.io/t/how-to-target--blank-in-md/524/19&#34;&gt;How to target blank in md?&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;anleitung&#34;&gt;Anleitung&lt;/h3&gt;
&lt;p&gt;Das Attribut &lt;code&gt;target=&amp;quot;_blank&amp;quot;&lt;/code&gt; kann man mit Hilfe von Hugo-Shortcodes realisieren.&lt;/p&gt;
&lt;style type=&#34;text/css&#34;&gt;
     
    .notice {
        --title-color: #fff;
        --title-background-color: #6be;
        --content-color: #444;
        --content-background-color: #e7f2fa;
    }

    .notice.comment {
        --title-background-color: #99bda2;
        --content-background-color: #efe;
    }

    .notice.info {
        --title-background-color: #fb7;
        --content-background-color: #fec;
    }

    .notice.tip {
        --title-background-color: #5a5;
        --content-background-color: #efe;
    }

    .notice.warning {
        --title-background-color: #c33;
        --content-background-color: #fee;
    }


     
    .notice {
        padding: 18px;
        line-height: 24px;
        margin-bottom: 24px;
        margin-top: 26px;
        border-radius: 4px;
        color: var(--content-color);
        background: var(--content-background-color);
    }

    .notice p:last-child {
        margin-bottom: 0
    }

     
    .notice-title {
        margin: -18px -18px 12px;
        padding: 4px 18px;
        border-radius: 4px 4px 0 0;
        font-weight: 700;
        color: var(--title-color);
        background: var(--title-background-color);
    }

     
    .icon-notice {
        display: inline-flex;
        align-self: center;
        margin-right: 8px;
    }

    .icon-notice img,
    .icon-notice svg {
        height: 1em;
        width: 1em;
        fill: currentColor;
    }

    .icon-notice img,
    .icon-notice.baseline svg {
        top: .125em;
        position: relative;
    }
&lt;/style&gt;&lt;div class=&#34;notice info&#34; &gt;
    &lt;p class=&#34;notice-title&#34;&gt;
        &lt;span class=&#34;icon-notice baseline&#34;&gt;
            &lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;92 59.5 300 300&#34;&gt;
  &lt;path d=&#34;M292 303.25V272c0-3.516-2.734-6.25-6.25-6.25H267v-100c0-3.516-2.734-6.25-6.25-6.25h-62.5c-3.516 0-6.25 2.734-6.25 6.25V197c0 3.516 2.734 6.25 6.25 6.25H217v62.5h-18.75c-3.516 0-6.25 2.734-6.25 6.25v31.25c0 3.516 2.734 6.25 6.25 6.25h87.5c3.516 0 6.25-2.734 6.25-6.25Zm-25-175V97c0-3.516-2.734-6.25-6.25-6.25h-37.5c-3.516 0-6.25 2.734-6.25 6.25v31.25c0 3.516 2.734 6.25 6.25 6.25h37.5c3.516 0 6.25-2.734 6.25-6.25Zm125 81.25c0 82.813-67.188 150-150 150-82.813 0-150-67.188-150-150 0-82.813 67.188-150 150-150 82.813 0 150 67.188 150 150Z&#34;/&gt;
&lt;/svg&gt;

        &lt;/span&gt;Voraussetzung&lt;/p&gt;&lt;p&gt;Damit HTML-Code innerhalb der Markdown-Datei gerendert wird, muss einmalig in der &lt;code&gt;config.toml&lt;/code&gt; folgender Eintrag gemacht werden:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[markup.goldmark.renderer]
unsafe = true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;(1)&lt;/strong&gt; - Erstellen Sie einen neuen Ordner &lt;code&gt;shortcodes&lt;/code&gt; im Hugo-Verzeichnis &lt;code&gt;layouts&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;(2)&lt;/strong&gt; - Erstellen Sie im neuen Verzeichnis eine neue HTML-Datei. Ich nenne sie wie im Beispiel unter Quellen &lt;code&gt;a_blank.html&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;(3)&lt;/strong&gt; - Fügen Sie diesen Code hinein:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;a target=&amp;#34;_blank&amp;#34; href=&amp;#34;{{ .Get 1 }}&amp;#34;&amp;gt;{{ .Get 0 | markdownify }}&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;(4)&lt;/strong&gt; - In der eigentlichen Markdown-Content-Datei fügen Sie den Shortcode folgendermaßen ein:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;{{% a_blank &amp;#34;Shortcodes linking&amp;#34; &amp;#34;https://www.petersell.de&amp;#34; %}}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Klickt man jetzt auf diesen Link &lt;a target=&#34;_blank&#34; href=&#34;https://www.petersell.de&#34;&gt;Shortcodes linking&lt;/a&gt;
, öffnet sich die Webseite in einem neuen Tab.&lt;/p&gt;
&lt;h4 id=&#34;weitere-quellen&#34;&gt;Weitere Quellen&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://discourse.gohugo.io/t/hugo-0-60-0-raw-html-omitted-issue/22010/7&#34;&gt;Raw HTML omitted Fehler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/templates/shortcode/&#34;&gt;gohugo.io - Create your own shortcodes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Hugo CMS mit Asciidoc auf Linux installieren</title>
      <link>http://localhost:1313/blog/hugo-cms-auf-linux-mit-asciidoc/</link>
      <category>asciidoc</category>
      <category>hugo</category>
      <category>linux</category>
      <pubDate>Mon, 25 Nov 2024 19:44:01 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/hugo-cms-auf-linux-mit-asciidoc/</guid>
      <description>&lt;p&gt;Seitdem ich von Windows auf Linux Fedora gewechselt bin, habe ich es versäumt, mir einen lokalen Hugo-Server zu installieren. Nun habe ich das nachgeholt: Mit dem Ergebnis, dass ich mir meine Blogposts vorher lokal anschauen kann, bevor ich sie mit Netlify auf Github veröffentliche.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;(1)&lt;/strong&gt; Auf der Konsole folgenden Befehl absetzen: &lt;code&gt;$ sudo dnf install hugo&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;(2)&lt;/strong&gt; In das Projektverzeichnis gehen. Bei mir ist es: &lt;code&gt;cd git/github/com.petersell.hugo&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;(3)&lt;/strong&gt; Das Kommando &lt;code&gt;hugo server&lt;/code&gt; eingeben + ENTER. Danach sollte die Homepage im Browser unter &lt;em&gt;localhost:1313&lt;/em&gt; abrufbar sein. Leider war dies bei mir nicht der Fall. Es erschien diese Fehlermeldung:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Error: error building site: &amp;#34;/git/github/com.petersell.hugo/content/blog/essay-ddrprotagonisten.adoc:1:1&amp;#34;: access denied: &amp;#34;asciidoctor&amp;#34; is not whitelisted in policy &amp;#34;security.exec.allow&amp;#34;; the current security configuration is:

[security]
  enableInlineShortcodes = false

  [security.exec]
    allow = [&amp;#39;^go$&amp;#39;, &amp;#39;^npx$&amp;#39;, &amp;#39;^postcss$&amp;#39;]
    osEnv = [&amp;#39;(?i)^((HTTPS?|NO)_PROXY|PATH(EXT)?|APPDATA|TE?MP|TERM|GO\w+|(XDG_CONFIG_)?HOME|USERPROFILE|SSH_AUTH_SOCK|DISPLAY|LANG)$&amp;#39;]

  [security.funcs]
    getenv = [&amp;#39;^HUGO_&amp;#39;, &amp;#39;^CI$&amp;#39;]

  [security.http]
    methods = [&amp;#39;(?i)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Hier fand ich eine Fehlerbehebung: &lt;a href=&#34;https://gohugo.io/about/security/&#34;&gt;https://gohugo.io/about/security/&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In &lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.91.0&#34;&gt;Hugo v0.91.0&lt;/a&gt; and newer, you can specify a project’s security policy in a config file.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;(4)&lt;/strong&gt; Ich hatte neben Markdown-Dateien auch asciidoc-Dateien in meinem Hugo-Projekt eingebunden. In der Datei &lt;em&gt;config.toml&lt;/em&gt; in meinem Homepage-Hauptverzeichnis musste ich folgendes hinzufügen: &amp;lsquo;^asciidoctor$&amp;rsquo;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[security]
  [security.exec]
    allow = [&amp;#39;^go$&amp;#39;, &amp;#39;^npx$&amp;#39;, &amp;#39;^postcss$&amp;#39;, &amp;#39;^asciidoctor$&amp;#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Jetzt wurde die Homepage gebuildet und war im Browser via &lt;em&gt;localhost:1313&lt;/em&gt; aufrufbar.&lt;/p&gt;
&lt;p&gt;Quelle: &lt;a href=&#34;https://developer.fedoraproject.org/start/sw/web-app/hugo.html&#34;&gt;https://developer.fedoraproject.org/start/sw/web-app/hugo.html&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tagesnotiz - Wieviel Tage sind schon um?</title>
      <link>http://localhost:1313/blog/tagesnotiz-wieviel-tage-sind-schon-um/</link>
      <category>obsidian</category>
      <pubDate>Fri, 15 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/tagesnotiz-wieviel-tage-sind-schon-um/</guid>
      <description>&lt;p&gt;Um mir vor Augen zu führen, wie schnell die Zeit vergeht und wie viel Zeit mir noch verbleibt, meine Ziele für das Jahr zu erreichen, blende ich mir in &lt;a href=&#34;https://obsidian.md/&#34;&gt;Obisidian&lt;/a&gt; die Nummer des Tages und der Woche im Header meiner Tagesnotiz ein.&lt;/p&gt;
&lt;p&gt;So steht es im &lt;em&gt;Daily Note Template&lt;/em&gt;.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;{{date:DDDD}}/365 | {{date:W}}/52
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Und so sieht es in der erzeugten Tagesnotiz aus.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;075/365 | 11/52
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;So, ich muss Schluss machen! Ich habe nicht mehr viel Zeit.&lt;/p&gt;
&lt;p&gt;Quelle: &lt;a href=&#34;https://peakd.com/hive-122108/@iwannabeme/automating-obsidian-workflows-with-templates&#34;&gt;https://peakd.com/hive-122108/@iwannabeme/automating-obsidian-workflows-with-templates&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Einen Habit-Tracker mit Obsidian erstellen</title>
      <link>http://localhost:1313/blog/habit-tracker-mit-obsidian-erstellen/</link>
      <category>obsidian</category>
      <pubDate>Sun, 10 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/habit-tracker-mit-obsidian-erstellen/</guid>
      <description>&lt;p&gt;Statt Zettelkasten und meinen Roman zu schreiben, erstelle ich mit Obsidian einen Habit-Tracker. Das Prokrastinieren wird durch &lt;a href=&#34;https://obsidian.md/&#34;&gt;Obisidian&lt;/a&gt; auf eine ganz neue Ebene gehoben.&lt;/p&gt;
&lt;p&gt;Jeder der etwas auf sich hält, hat &lt;em&gt;Atomic Habits&lt;/em&gt; von James Clear gelesen und werkelt mit Obsidian herum, das gelesene irgendwie umzusetzen. Ich auch, denn es macht einfach Spaß.&lt;/p&gt;
&lt;h2 id=&#34;zweimal-wöchentlich-laufen&#34;&gt;Zweimal wöchentlich laufen&lt;/h2&gt;
&lt;p&gt;Zweimal in der Woche möchte ich mindestens joggen gehen. Besser noch dreimal. Beides verbuche ich als Erfolg. Jahrelang habe ich mir diesen Erfolg in meinen Taschenkalender eingetragen. Jetzt gibt es aber Obsidian.&lt;/p&gt;
&lt;p&gt;Ich möchte in einer Monatsübersicht sehen, wie oft ich in jeder Woche joggen war. Dazu habe ich mir das Plugin &lt;em&gt;Tracker&lt;/em&gt; installiert.&lt;/p&gt;
&lt;h3 id=&#34;tracker-einrichten---monatsübersicht&#34;&gt;Tracker einrichten - Monatsübersicht&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;In meinem &lt;em&gt;Daily Template&lt;/em&gt; richte ich im YAML-Header einen neuen Wert  &lt;em&gt;jogging:&lt;/em&gt; ein. Hier muss später in jeder neu erstellten Tagesnotiz hinter dem Doppelpunkt eine 0 oder 1 eingetragen werden - je nach dem, ob ich joggen war.&lt;/li&gt;
&lt;li&gt;In die Tagesnotizen der letzten Wochen trage ich rückwirkend ebenfalls den Wert &lt;em&gt;joggen: 0/1&lt;/em&gt; ein, je nach dem, ob ich an diesen Tagen joggen war.&lt;/li&gt;
&lt;li&gt;Ich lege einen neuen Ordner &lt;em&gt;Habits&lt;/em&gt; an.&lt;/li&gt;
&lt;li&gt;Ich lege eine neue Notiz &lt;em&gt;Jogging Tracker&lt;/em&gt; in diesem Ordner an. Es entsteht also eine Datei &lt;code&gt;Habits/Jogging Tracker.md&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;In diese Notiz trage ich folgendes ein:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;---tracker
searchType: frontmatter
searchTarget: jogging
folder: Journal/01 - Daily/2024-daily
datasetName: Jogging
month:
  startWeekOn: Mon
---
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Hinweis: anstelle der 3 Bindestriche müssen die 3 Apostrophe (Auslassungszeichen) der Tracker-Syntax gesetzt werden.&lt;/p&gt;
&lt;p&gt;Das Verzeichnis unter &lt;em&gt;folder&lt;/em&gt; ist das Verzeichnis, wo derzeit meine Tagesnotizen gespeichert werden.&lt;/p&gt;
&lt;p&gt;Gehe ich nun aus der &lt;em&gt;Bearbeiten&lt;/em&gt;-Ansicht heraus, zeigt sich ein Monatskalender mit farbigen Kreisen an den Tagen, an denen ich joggen war. Da ich die Woche mit &lt;em&gt;Montag&lt;/em&gt; anfangen lassen möchte, füge ich &lt;code&gt;startWeekOn: Mon&lt;/code&gt; unter &lt;code&gt;month&lt;/code&gt; hinzu.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../images/obsidian/habit-tracker-month.png&#34; alt=&#34;Wochenübersicht&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;unter-14-minuten-laufen&#34;&gt;Unter 14 Minuten laufen&lt;/h2&gt;
&lt;p&gt;Das Joggen allein ist schon ein Erfolg. Man hat seinen inneren Schweinehund überwunden und das Haus verlassen. Aber ein bisschen Ehrgeiz entwickelt man auch. So habe ich mir vorgenommen, nicht jeden Tag 1% besser zu werden wie James Clear, aber doch mindestens unter 14 Minuten zu bleiben. Um zu sehen, wie oft ich meine Mindestanforderung nicht erfüllen konnte, habe ich mir ein schönes Liniendiagramm gebastelt.&lt;/p&gt;
&lt;h3 id=&#34;tracker-einrichten---liniendiagramm&#34;&gt;Tracker einrichten - Liniendiagramm&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;In meinem &lt;em&gt;Daily Template&lt;/em&gt; habe ich im YAML-Header  einen weiteren Wert einführt: &lt;em&gt;joggingzeit:&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;In die Tagesnotizen der letzten Wochen trage ich ebenfalls diesen Wert &lt;em&gt;joggingzeit:&lt;/em&gt; ein. In meinem Taschenkalender stehen meine notierten Zeiten der vergangen Jogging-Touren. Jedoch statt &lt;em&gt;13,12&lt;/em&gt; für 13 Minuten und 12 Sekunden trage ich &lt;em&gt;13.12&lt;/em&gt; hinter den Wert &lt;em&gt;joggingzeit:&lt;/em&gt; ein. Statt des Kommas also einen Punkt.&lt;/li&gt;
&lt;li&gt;Ich erstelle eine neue Notiz &lt;em&gt;Joggingzeit Tracker&lt;/em&gt; in meinem neuen Ordner &lt;em&gt;Habits&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;In diese Notiz trage ich folgendes:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;---tracker
searchType: frontmatter
searchTarget: joggingtime
folder: Journal/01 - Daily/2024-daily
line:
	fillGap: true
	reverseYAxis: true
---
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Wechsle ich nun vom Editier-Modus in die Lese-Ansicht, zeigt sich ein Graph mit X- und Y-Achse und einer Linie zwischen den Zeitwerten.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../images/obsidian/habit-tracker-line.png&#34; alt=&#34;Liniendiagramm&#34;&gt;&lt;/p&gt;
&lt;p&gt;Damit zwischen den unregelmäßigen Datumsangaben eine Linie gezogen wird, muss das Attribut &lt;code&gt;fillGap: true&lt;/code&gt; zur &lt;em&gt;line&lt;/em&gt; hinzugefügt werden.&lt;/p&gt;
&lt;p&gt;Damit die höchste Zeit als schlechtes Ergebnis ausgegeben wird, muss die Y-Achse umgedreht werden mit &lt;code&gt;reverseYAxis: true&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Quelle und Inspiration:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=W_leEJHBZW4&#34;&gt;https://www.youtube.com/watch?v=W_leEJHBZW4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/pyrochlore/obsidian-tracker/blob/master/docs/InputParameters.md&#34;&gt;https://github.com/pyrochlore/obsidian-tracker/blob/master/docs/InputParameters.md&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Drei Bedingungen für den Erfolg eines Zettelkastens</title>
      <link>http://localhost:1313/blog/drei-bedingungen-fuer-den-erfolg-eines-zettelkastens/</link>
      <pubDate>Sun, 25 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/drei-bedingungen-fuer-den-erfolg-eines-zettelkastens/</guid>
      <description>&lt;p&gt;Die Zettelkastenmethode erhält seit einigen Jahren in der Blogosphäre viel Aufmerksamkeit. Nicht immer ist das Fazit ein gutes. So manch einer wendet sich vom Zettelkastenprinzip wieder ab.&lt;/p&gt;
&lt;p&gt;Brauche ich auch einen Zettelkasten? Wenn ja, welche Mindestbedingungen müssen erfüllt sein, damit ein Zettelkasten funktioniert?&lt;/p&gt;
&lt;h2 id=&#34;bedingung-1&#34;&gt;Bedingung 1&lt;/h2&gt;
&lt;p&gt;Ein Zettelkasten ist nur von Nutzen, wenn Sie in Zukunft Texte schreiben wollen.&lt;/p&gt;
&lt;p&gt;Ein &lt;strong&gt;Zettel&lt;/strong&gt; ist eine mit eigenen Worten formulierte Idee oder ein Gedanke, der später im formuliertem Fließtext Verwendung findet. Eine &lt;strong&gt;Notiz&lt;/strong&gt; über eine Sache, einer Alltagsroutine oder Handlungsanleitung dient einem effizienten Leben, nicht aber der Produktion von Texten.&lt;/p&gt;
&lt;h2 id=&#34;bedingung-2&#34;&gt;Bedingung 2&lt;/h2&gt;
&lt;p&gt;Sie müssen die &lt;em&gt;Flüchtigen Notizen&lt;/em&gt; und die permanenten &lt;em&gt;Lektürenotizen&lt;/em&gt; streng von den ausformulierten &lt;em&gt;Zetteln&lt;/em&gt; trennen. Beide sind nicht aus eigenen Fragestellungen und Gedanken entstanden.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Update 2024-12-19:&lt;/em&gt; Sie müssen gar nichts trennen. Im Gegenteil. Sie dürfen nur nicht vergessen, aus den Lektürezetteln (Zitate) neue, eigene Hauptzettel/Main Notes zu entwickeln.&lt;/p&gt;
&lt;h2 id=&#34;bedingung-3&#34;&gt;Bedingung 3&lt;/h2&gt;
&lt;p&gt;Werten Sie &lt;em&gt;Lektürenotizen&lt;/em&gt; und &lt;em&gt;Flüchtige Notizen&lt;/em&gt; aus: schreiben Sie in dauerhaft verständlicher Form jeweils einen Gedanken auf einen Zettel inkl. Quellenangaben. Durch das Fragestellen, das Einsortieren (Folgezettel),  das Verlinken, das Formulieren in eigenen Worten, das Erstellen von Tags wird der Zettelkasten zu einer Art &lt;em&gt;Schreibturbo&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>