{
    "version": "https://jsonfeed.org/version/1",
    "title": "Andreas Petersell",
    "home_page_url": "http://localhost:1313/",
    "feed_url": "http://localhost:1313/blog/index.json",
    "description": "Recent content on Andreas Petersell", 
    "favicon": "http://localhost:1313/assets/icon.png", 
    "icon": "http://localhost:1313/assets/icon.png", 
    "author": {
        "name": "Andreas Petersell"
    },
    "items":[{"content_html":"\u003cp\u003eYou have a project on gitlab with the URL \u003cem\u003emyname.gitlab.io/project\u003c/em\u003e and would now like to redirect your subdomain \u003cem\u003e\u003ca href=\"https://www.myname.com\"\u003ewww.myname.com\u003c/a\u003e\u003c/em\u003e to your project in addition to your root domain \u003cem\u003emyname.com\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eQuelle: \u003ca href=\"https://docs.gitlab.com/user/project/pages/custom_domains_ssl_tls_certification/\"\u003eGitLab Pages custom domains\u003c/a\u003e\u003c/p\u003e\n\u003c!-- FM:Snippet:Start data:{\"id\":\"Admonition - Voraussetzung\",\"fields\":[]} --\u003e\n\u003cstyle type=\"text/css\"\u003e\n     \n    .notice {\n        --title-color: #fff;\n        --title-background-color: #6be;\n        --content-color: #444;\n        --content-background-color: #e7f2fa;\n    }\n\n    .notice.comment {\n        --title-background-color: #99bda2;\n        --content-background-color: #efe;\n    }\n\n    .notice.info {\n        --title-background-color: #fb7;\n        --content-background-color: #fec;\n    }\n\n    .notice.tip {\n        --title-background-color: #5a5;\n        --content-background-color: #efe;\n    }\n\n    .notice.warning {\n        --title-background-color: #c33;\n        --content-background-color: #fee;\n    }\n\n\n     \n    .notice {\n        padding: 18px;\n        line-height: 24px;\n        margin-bottom: 24px;\n        margin-top: 26px;\n        border-radius: 4px;\n        color: var(--content-color);\n        background: var(--content-background-color);\n    }\n\n    .notice p:last-child {\n        margin-bottom: 0\n    }\n\n     \n    .notice-title {\n        margin: -18px -18px 12px;\n        padding: 4px 18px;\n        border-radius: 4px 4px 0 0;\n        font-weight: 700;\n        color: var(--title-color);\n        background: var(--title-background-color);\n    }\n\n     \n    .icon-notice {\n        display: inline-flex;\n        align-self: center;\n        margin-right: 8px;\n    }\n\n    .icon-notice img,\n    .icon-notice svg {\n        height: 1em;\n        width: 1em;\n        fill: currentColor;\n    }\n\n    .icon-notice img,\n    .icon-notice.baseline svg {\n        top: .125em;\n        position: relative;\n    }\n\u003c/style\u003e\u003cdiv class=\"notice info\" \u003e\n    \u003cp class=\"notice-title\"\u003e\n        \u003cspan class=\"icon-notice baseline\"\u003e\n            \u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"92 59.5 300 300\"\u003e\n  \u003cpath d=\"M292 303.25V272c0-3.516-2.734-6.25-6.25-6.25H267v-100c0-3.516-2.734-6.25-6.25-6.25h-62.5c-3.516 0-6.25 2.734-6.25 6.25V197c0 3.516 2.734 6.25 6.25 6.25H217v62.5h-18.75c-3.516 0-6.25 2.734-6.25 6.25v31.25c0 3.516 2.734 6.25 6.25 6.25h87.5c3.516 0 6.25-2.734 6.25-6.25Zm-25-175V97c0-3.516-2.734-6.25-6.25-6.25h-37.5c-3.516 0-6.25 2.734-6.25 6.25v31.25c0 3.516 2.734 6.25 6.25 6.25h37.5c3.516 0 6.25-2.734 6.25-6.25Zm125 81.25c0 82.813-67.188 150-150 150-82.813 0-150-67.188-150-150 0-82.813 67.188-150 150-150 82.813 0 150 67.188 150 150Z\"/\u003e\n\u003c/svg\u003e\n\n        \u003c/span\u003eVoraussetzung\u003c/p\u003e\u003cp\u003eYou have access to the DNS entries of your domains with your web hosting service provider.\u003c/p\u003e\u003c/div\u003e\n\n\u003c!-- FM:Snippet:End --\u003e\n\u003ch3 id=\"cname-worked-fine\"\u003eCNAME worked fine\u003c/h3\u003e\n\u003cp\u003eThis is not a guide, as every web host service provider uses different forms to enter the various DNS entries.\u003c/p\u003e\n\u003cp\u003eMine uses the following values:\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eSubdomain\u003c/th\u003e\n\u003cth\u003eDomain\u003c/th\u003e\n\u003cth\u003eTyp\u003c/th\u003e\n\u003cth\u003eContent\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003ewww\u003c/td\u003e\n\u003ctd\u003emyname.com\u003c/td\u003e\n\u003ctd\u003eCNAME\u003c/td\u003e\n\u003ctd\u003emyname.gitlab.io.\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003eAnd so the CNAME entry worked immediately.\u003c/p\u003e\n\u003ch3 id=\"verification-by-trial-and-error\"\u003eVerification by trial and error\u003c/h3\u003e\n\u003cp\u003eBut it took me days to complete the verification. The Gitlab documentation uses this syntax as a default and alludes to the command line level.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e_gitlab-pages-verification-code.www.myname.com TXT gitlab-pages-verification-code=31e837733dd7174ada938b64\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eHowever, this example is not clear when filling in the form above. After several attempts, the following entry in the table worked.\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eSubdomain\u003c/th\u003e\n\u003cth\u003eDomain\u003c/th\u003e\n\u003cth\u003eTyp\u003c/th\u003e\n\u003cth\u003eContent\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e_gitlab-pages-verification-code.www\u003c/td\u003e\n\u003ctd\u003emyname.com\u003c/td\u003e\n\u003ctd\u003eTXT\u003c/td\u003e\n\u003ctd\u003egitlab-pages-verification-code=31e837733dd7174ada938b64\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003eThe verification status finally turned green: \u003cem\u003eVerified!\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eAt \u003ca href=\"https://dnschecker.org/\"\u003ehttps://dnschecker.org/\u003c/a\u003e you can check whether the TXT entries are recognized. Fill in \u003cem\u003e_gitlab-pages-verification-code.www.myname.com\u003c/em\u003e and select \u003cem\u003eTXT\u003c/em\u003e.\u003c/p\u003e","date_modified":"2025-05-19T15:40:36Z","date_published":"2025-05-19T15:40:36Z","id":"http://localhost:1313/blog/verification-of-your-subdomain-for-gitlab-project/","summary":"\u003cp\u003eYou have a project on gitlab with the URL \u003cem\u003emyname.gitlab.io/project\u003c/em\u003e and would now like to redirect your subdomain \u003cem\u003e\u003ca href=\"https://www.myname.com\"\u003ewww.myname.com\u003c/a\u003e\u003c/em\u003e to your project in addition to your root domain \u003cem\u003emyname.com\u003c/em\u003e.\u003c/p\u003e","tags":["hugo","blogging"],"title":"Verification of your Subdomain for a gitlab Project","url":"http://localhost:1313/blog/verification-of-your-subdomain-for-gitlab-project/"},{"content_html":"\u003cp\u003eUm Visual Studio Code als Quelltext-Editor für DITA-XML-Dateien mit allen Annehmlichkeiten wie z.B. der Validierung nutzen zu können, müssen in den Einstellungen des Programms, genauer in der \u003ccode\u003esettings.json\u003c/code\u003e, drei Einträge vorgenommen werden.\u003c/p\u003e\n\u003cp\u003eDamit ich bei der nächsten PC-Einrichtung nicht wieder anfange zu suchen, schreibe ich es jetzt auf.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/no-validation.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eLeider weiß ich nicht immer, welche DITA-Tags in welche Reihenfolge gehören. Eine zeitnahe Validierung der DITA-Synstax ist also sehr hilfreich.\u003c/p\u003e\n\u003cp\u003eQuellen:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://stackoverflow.com/questions/64782816/how-can-i-make-dita-catalog-xml-work-in-vs-code\"\u003eHow can I make dita-catalog.xml work in vscode\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.baeldung.com/find-java-home\"\u003eHow to find JAVA_HOME\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"einstellungen-von-vs-code-komplettieren\"\u003eEinstellungen von VS Code komplettieren\u003c/h3\u003e\n\u003c!-- FM:Snippet:Start data:{\"id\":\"Admonition - Voraussetzung\",\"fields\":[]} --\u003e\n\u003cstyle type=\"text/css\"\u003e\n     \n    .notice {\n        --title-color: #fff;\n        --title-background-color: #6be;\n        --content-color: #444;\n        --content-background-color: #e7f2fa;\n    }\n\n    .notice.comment {\n        --title-background-color: #99bda2;\n        --content-background-color: #efe;\n    }\n\n    .notice.info {\n        --title-background-color: #fb7;\n        --content-background-color: #fec;\n    }\n\n    .notice.tip {\n        --title-background-color: #5a5;\n        --content-background-color: #efe;\n    }\n\n    .notice.warning {\n        --title-background-color: #c33;\n        --content-background-color: #fee;\n    }\n\n\n     \n    .notice {\n        padding: 18px;\n        line-height: 24px;\n        margin-bottom: 24px;\n        margin-top: 26px;\n        border-radius: 4px;\n        color: var(--content-color);\n        background: var(--content-background-color);\n    }\n\n    .notice p:last-child {\n        margin-bottom: 0\n    }\n\n     \n    .notice-title {\n        margin: -18px -18px 12px;\n        padding: 4px 18px;\n        border-radius: 4px 4px 0 0;\n        font-weight: 700;\n        color: var(--title-color);\n        background: var(--title-background-color);\n    }\n\n     \n    .icon-notice {\n        display: inline-flex;\n        align-self: center;\n        margin-right: 8px;\n    }\n\n    .icon-notice img,\n    .icon-notice svg {\n        height: 1em;\n        width: 1em;\n        fill: currentColor;\n    }\n\n    .icon-notice img,\n    .icon-notice.baseline svg {\n        top: .125em;\n        position: relative;\n    }\n\u003c/style\u003e\u003cdiv class=\"notice info\" \u003e\n    \u003cp class=\"notice-title\"\u003e\n        \u003cspan class=\"icon-notice baseline\"\u003e\n            \u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"92 59.5 300 300\"\u003e\n  \u003cpath d=\"M292 303.25V272c0-3.516-2.734-6.25-6.25-6.25H267v-100c0-3.516-2.734-6.25-6.25-6.25h-62.5c-3.516 0-6.25 2.734-6.25 6.25V197c0 3.516 2.734 6.25 6.25 6.25H217v62.5h-18.75c-3.516 0-6.25 2.734-6.25 6.25v31.25c0 3.516 2.734 6.25 6.25 6.25h87.5c3.516 0 6.25-2.734 6.25-6.25Zm-25-175V97c0-3.516-2.734-6.25-6.25-6.25h-37.5c-3.516 0-6.25 2.734-6.25 6.25v31.25c0 3.516 2.734 6.25 6.25 6.25h37.5c3.516 0 6.25-2.734 6.25-6.25Zm125 81.25c0 82.813-67.188 150-150 150-82.813 0-150-67.188-150-150 0-82.813 67.188-150 150-150 82.813 0 150 67.188 150 150Z\"/\u003e\n\u003c/svg\u003e\n\n        \u003c/span\u003eVoraussetzung\u003c/p\u003e\u003cp\u003eSie haben Java und ein DITA-Open-Toolkit installiert.\u003c/p\u003e\u003c/div\u003e\n\n\u003c!-- FM:Snippet:End --\u003e\n\u003cp\u003eEs gilt, diese drei Einstellungen hinzuzufügen:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003ePfad zum Java-Programm\u003c/li\u003e\n\u003cli\u003ePfad zur Datei \u003ccode\u003ecatalog-dita.xml\u003c/code\u003e im DITA-OT-Verzeichnis\u003c/li\u003e\n\u003cli\u003eAktiveren des Kontrollkästchen \u003cem\u003exml.validation.resolveExternalEntities\u003c/em\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch4 id=\"1-pfad-zum-java-programm\"\u003e(1) Pfad zum Java-Programm\u003c/h4\u003e\n\u003cp\u003eDa ich mit Linux Fedora arbeite, gab \u003ca target=\"_blank\" href=\"https://www.baeldung.com/find-java-home\"\u003edieser Befehl\u003c/a\u003e\nim Terminal-Fenster meinen JAVA_HOME-Pfad zurück:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ java -XshowSettings:properties -version 2\u0026gt;\u0026amp;1 \u0026gt; /dev/null | grep \u0026#39;java.home\u0026#39;\n\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"2-pfad-zur-catalog-datei\"\u003e(2) Pfad zur catalog-Datei\u003c/h4\u003e\n\u003cp\u003eDa ich mit Linux Fedora arbeite, diese Syntax der Schrägstriche.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u0026#34;xml.catalogs\u0026#34;: [\n\t\u0026#34;/home/andreas/Programme/dita-ot-4.1.2/catalog-dita.xml\u0026#34;\n],\n\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"3-kontrollkästchen-für-validation-aktiveren\"\u003e(3) Kontrollkästchen für Validation aktiveren\u003c/h4\u003e\n\u003cp\u003eIn der Oberfläche das Kontrollkästchen aktiveren für \u003cem\u003exml.validation.resolveExternalEntities\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/kontrollkaestchen-aktivieren.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eZum Schluss VS Code neu starten.\u003c/p\u003e\n\u003ch4 id=\"erbebnis\"\u003eErbebnis\u003c/h4\u003e\n\u003cp\u003eIn der Datei \u003ccode\u003esettings.json\u003c/code\u003e sah die Notation bei mir so aus:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u0026#34;xml.catalogs\u0026#34;: [\n\t\u0026#34;/home/andreas/Programme/dita-ot-4.1.2/catalog-dita.xml\u0026#34;\n],\n\u0026#34;xml.java.home\u0026#34;: \u0026#34;/usr/lib/jvm/java-21-openjdk\u0026#34;,\n\u0026#34;xml.validation.resolveExternalEntities\u0026#34;: true\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eJetzt bekomme ich sofort Fehlerhinweise, wenn meine DITA-Syntax nicht stimmt. Auch werden mir beim Schreiben im Kontextmenü mögliche korrekte Tags vorgeschlagen. Ein entspannteres Arbeiten als DITA-Redakteur ist möglich.\u003c/p\u003e","date_modified":"2025-04-02T19:31:50Z","date_published":"2025-04-02T19:31:50Z","id":"http://localhost:1313/blog/dita-xml-mit-vscode-validieren/","summary":"\u003cp\u003eUm Visual Studio Code als Quelltext-Editor für DITA-XML-Dateien mit allen Annehmlichkeiten wie z.B. der Validierung nutzen zu können, müssen in den Einstellungen des Programms, genauer in der \u003ccode\u003esettings.json\u003c/code\u003e, drei Einträge vorgenommen werden.\u003c/p\u003e","tags":["dita-xml","techcomm"],"title":"DITA-XML mit VS Code validieren","url":"http://localhost:1313/blog/dita-xml-mit-vscode-validieren/"},{"content_html":"\u003cp\u003eIn Markdown gibt es keine Möglichkeit, farbig umrahmte Absätze für Hinweise, Warnungen, Infos und Tipps zu gestalten. In Hugo bietet sich aber diese Möglichkeit durch sogenannte Shortcodes.\u003c/p\u003e\n\u003cp\u003eSogenannte Shortcodes werden in einer HTML-Datei abgelegt und müssen im Markdown-Content auf spezielle Weise eingefügt werden.\u003c/p\u003e\n\u003cp\u003eQuelle: \u003ca target=\"_blank\" href=\"https://github.com/martignoni/hugo-notice\"\u003ehugo-notice von Nicolas Martignoni\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"anleitung\"\u003eAnleitung\u003c/h2\u003e\n\u003cp\u003eDa ich mein Template \u003cstrong\u003enicht\u003c/strong\u003e im Ordner \u003ccode\u003ethemes\u003c/code\u003e als git-submodule betreibe, kopiere ich alles in meinen lokalen \u003ccode\u003elayouts\u003c/code\u003e-Ordner und synchronisiere diesen zugleich mit meinen Content-Dateien.\u003c/p\u003e\n\u003cstyle type=\"text/css\"\u003e\n     \n    .notice {\n        --title-color: #fff;\n        --title-background-color: #6be;\n        --content-color: #444;\n        --content-background-color: #e7f2fa;\n    }\n\n    .notice.comment {\n        --title-background-color: #99bda2;\n        --content-background-color: #efe;\n    }\n\n    .notice.info {\n        --title-background-color: #fb7;\n        --content-background-color: #fec;\n    }\n\n    .notice.tip {\n        --title-background-color: #5a5;\n        --content-background-color: #efe;\n    }\n\n    .notice.warning {\n        --title-background-color: #c33;\n        --content-background-color: #fee;\n    }\n\n\n     \n    .notice {\n        padding: 18px;\n        line-height: 24px;\n        margin-bottom: 24px;\n        margin-top: 26px;\n        border-radius: 4px;\n        color: var(--content-color);\n        background: var(--content-background-color);\n    }\n\n    .notice p:last-child {\n        margin-bottom: 0\n    }\n\n     \n    .notice-title {\n        margin: -18px -18px 12px;\n        padding: 4px 18px;\n        border-radius: 4px 4px 0 0;\n        font-weight: 700;\n        color: var(--title-color);\n        background: var(--title-background-color);\n    }\n\n     \n    .icon-notice {\n        display: inline-flex;\n        align-self: center;\n        margin-right: 8px;\n    }\n\n    .icon-notice img,\n    .icon-notice svg {\n        height: 1em;\n        width: 1em;\n        fill: currentColor;\n    }\n\n    .icon-notice img,\n    .icon-notice.baseline svg {\n        top: .125em;\n        position: relative;\n    }\n\u003c/style\u003e\u003cdiv class=\"notice info\" \u003e\n    \u003cp class=\"notice-title\"\u003e\n        \u003cspan class=\"icon-notice baseline\"\u003e\n            \u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"92 59.5 300 300\"\u003e\n  \u003cpath d=\"M292 303.25V272c0-3.516-2.734-6.25-6.25-6.25H267v-100c0-3.516-2.734-6.25-6.25-6.25h-62.5c-3.516 0-6.25 2.734-6.25 6.25V197c0 3.516 2.734 6.25 6.25 6.25H217v62.5h-18.75c-3.516 0-6.25 2.734-6.25 6.25v31.25c0 3.516 2.734 6.25 6.25 6.25h87.5c3.516 0 6.25-2.734 6.25-6.25Zm-25-175V97c0-3.516-2.734-6.25-6.25-6.25h-37.5c-3.516 0-6.25 2.734-6.25 6.25v31.25c0 3.516 2.734 6.25 6.25 6.25h37.5c3.516 0 6.25-2.734 6.25-6.25Zm125 81.25c0 82.813-67.188 150-150 150-82.813 0-150-67.188-150-150 0-82.813 67.188-150 150-150 82.813 0 150 67.188 150 150Z\"/\u003e\n\u003c/svg\u003e\n\n        \u003c/span\u003eVoraussetzung\u003c/p\u003e\u003cp\u003eSie müssen in der \u003ccode\u003econfig.toml\u003c/code\u003e angeben, ob Sie auf Ihrer Webseite mit einer Standardsprache arbeiten, oder mehrere, nahezu gleichberechtigte Sprachen nutzen. Da ich Deutsch als Standardsprache nutze, habe ich in die \u003ccode\u003econfig.toml\u003c/code\u003e diesen Eintrag hinzugefügt: \u003ccode\u003edefaultContentLanguage = 'de'\u003c/code\u003e.\u003c/p\u003e\u003c/div\u003e\n\n\u003ch3 id=\"einmaliges-einrichten\"\u003eEinmaliges Einrichten\u003c/h3\u003e\n\u003cp\u003e\u003cstrong\u003e(1)\u003c/strong\u003e - Laden Sie das Zip-Archiv vom \u003ca href=\"https://github.com/martignoni/hugo-notice\"\u003egit-Repository hugo-notice\u003c/a\u003e herunter und entpacken Sie es.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e(2)\u003c/strong\u003e - Legen Sie die Datei \u003ccode\u003enotice.html\u003c/code\u003e in den Ordner \u003ccode\u003elayouts/shortcodes\u003c/code\u003e ab.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e(3)\u003c/strong\u003e - Kopieren Sie den Ordner \u003ccode\u003eicons\u003c/code\u003e in Ihren Hauptordner des Repositorys, also auf gleicher Ebene wie den den Ordner \u003ccode\u003elayouts\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e(4)\u003c/strong\u003e - Kopieren Sie den Ordner \u003ccode\u003ei18n\u003c/code\u003e in Ihren Hauptordner des Repositorys, also auf gleicher Ebene wie den den Ordner \u003ccode\u003elayouts\u003c/code\u003e. Löschen Sie die Dateien für die Sprachen, die Sie bestimmt nicht nutzen. Bei mir blieb nur die \u003ccode\u003ede.yaml\u003c/code\u003e übrig.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e(5)\u003c/strong\u003e - Editieren Sie im Ordner \u003ccode\u003ei18n\u003c/code\u003e die Datei \u003ccode\u003ede.yaml\u003c/code\u003e, so denn nötig. Ich habe z.B. die Übersetzung vom gelben Kasten \u003cem\u003eInformation\u003c/em\u003e auf \u003cem\u003eVoraussetzung\u003c/em\u003e geändert.\u003c/p\u003e\n\u003ch3 id=\"anwenden-im-markdown-content\"\u003eAnwenden im Markdown-Content\u003c/h3\u003e\n\u003cp\u003eSobald Sie die Admonitions benutzen möchten, fügen Sie z.B. für obiges gelbes Kästchen folgende Notation in Ihre Content-Datei ein:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e{{\u0026lt; notice info \u0026gt;}}\nSie müssen in der `config.toml` angeben, ob Sie auf Ihrer Webseite ...\n{{\u0026lt; /notice \u0026gt;}}\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"beispiel-für-eine-warnung\"\u003eBeispiel für eine Warnung\u003c/h3\u003e\n\u003cdiv class=\"notice warning\" \u003e\n    \u003cp class=\"notice-title\"\u003e\n        \u003cspan class=\"icon-notice baseline\"\u003e\n            \u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"126 76.5 300 300\"\u003e\n  \u003cpath d=\"M297.431 324.397v-34.255c0-3.245-2.344-5.95-5.358-5.95h-32.146c-3.014 0-5.358 2.705-5.358 5.95v34.255c0 3.245 2.344 5.95 5.358 5.95h32.146c3.014 0 5.358-2.705 5.358-5.95Zm-.335-67.428 3.014-82.753c0-1.081-.502-2.524-1.674-3.425-1.005-.902-2.512-1.983-4.019-1.983h-36.834c-1.507 0-3.014 1.081-4.019 1.983-1.172.901-1.674 2.704-1.674 3.786l2.846 82.392c0 2.344 2.512 4.146 5.693 4.146h30.975c3.013 0 5.525-1.803 5.692-4.146Zm-2.344-168.39L423.34 342.425c3.683 7.032 3.516 15.686-.335 22.717-3.85 7.031-10.883 11.358-18.417 11.358H147.413c-7.534 0-14.566-4.327-18.417-11.358-3.85-7.031-4.018-15.685-.335-22.716L257.248 88.578C260.93 81.188 268.13 76.5 276 76.5c7.87 0 15.069 4.688 18.752 12.08Z\"/\u003e\n\u003c/svg\u003e\n\n        \u003c/span\u003eWarnung\u003c/p\u003e\u003cp\u003eThis is a warning notice. Be warned!\u003c/p\u003e\u003c/div\u003e\n\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e{{\u0026lt; notice warning \u0026gt;}}\nThis is a warning notice. Be warned!\n{{\u0026lt; /notice \u0026gt;}}\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"weitere-quellen\"\u003eWeitere Quellen\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://discourse.gohugo.io/t/i-need-help-with-i18n-translate-shortcode/39858\"\u003eFehler bei Übersetzungen von Shortcodes \u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://gohugo.io/templates/shortcode/\"\u003egohugo.io - Create your own shortcodes\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","date_modified":"2024-12-07T11:38:27Z","date_published":"2024-12-07T11:38:27Z","id":"http://localhost:1313/blog/hugo-admonitions-in-markdown/","summary":"\u003cp\u003eIn Markdown gibt es keine Möglichkeit, farbig umrahmte Absätze für Hinweise, Warnungen, Infos und Tipps zu gestalten. In Hugo bietet sich aber diese Möglichkeit durch sogenannte Shortcodes.\u003c/p\u003e","tags":["hugo","techcomm","blogging"],"title":"Admonitions in Markdown","url":"http://localhost:1313/blog/hugo-admonitions-in-markdown/"},{"content_html":"\u003cp\u003eBisher habe ich meine Asciidoc- und Markdown-Dateien in VSCode erstellt. Das macht aber nicht so viel Spaß. Nun habe ich das \u003ca href=\"https://route360.dev/en/post/frontmatter-cms/\"\u003eHeadless-CMS\u003c/a\u003e FrontMatter entdeckt. Statt zu tippen klicke ich jetzt auf Schaltflächen.\u003c/p\u003e\n\u003cp\u003eErstellen Sie schnell auf Grundlage einer Markdown-Datei (template) eine Kopie dieser mit neuem Dateinamen. Die Dokumentation spricht zwar vom Einsatz von Templates. Aber nirgendwo steht, wie man die eingerichteten Templates benutzt! Bis ich die Vorgehensweise zufällig im Video \u003cem\u003eHow you can use content-types in Front Matter CMS\u003c/em\u003e vom Entwickler Elio Struyf entdeckte.\u003c/p\u003e\n\u003cstyle type=\"text/css\"\u003e\n     \n    .notice {\n        --title-color: #fff;\n        --title-background-color: #6be;\n        --content-color: #444;\n        --content-background-color: #e7f2fa;\n    }\n\n    .notice.comment {\n        --title-background-color: #99bda2;\n        --content-background-color: #efe;\n    }\n\n    .notice.info {\n        --title-background-color: #fb7;\n        --content-background-color: #fec;\n    }\n\n    .notice.tip {\n        --title-background-color: #5a5;\n        --content-background-color: #efe;\n    }\n\n    .notice.warning {\n        --title-background-color: #c33;\n        --content-background-color: #fee;\n    }\n\n\n     \n    .notice {\n        padding: 18px;\n        line-height: 24px;\n        margin-bottom: 24px;\n        margin-top: 26px;\n        border-radius: 4px;\n        color: var(--content-color);\n        background: var(--content-background-color);\n    }\n\n    .notice p:last-child {\n        margin-bottom: 0\n    }\n\n     \n    .notice-title {\n        margin: -18px -18px 12px;\n        padding: 4px 18px;\n        border-radius: 4px 4px 0 0;\n        font-weight: 700;\n        color: var(--title-color);\n        background: var(--title-background-color);\n    }\n\n     \n    .icon-notice {\n        display: inline-flex;\n        align-self: center;\n        margin-right: 8px;\n    }\n\n    .icon-notice img,\n    .icon-notice svg {\n        height: 1em;\n        width: 1em;\n        fill: currentColor;\n    }\n\n    .icon-notice img,\n    .icon-notice.baseline svg {\n        top: .125em;\n        position: relative;\n    }\n\u003c/style\u003e\u003cdiv class=\"notice tip\" \u003e\n    \u003cp class=\"notice-title\"\u003e\n        \u003cspan class=\"icon-notice baseline\"\u003e\n            \u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"300.5 134 300 300\"\u003e\n  \u003cpath d=\"M551.281 252.36c0-3.32-1.172-6.641-3.515-8.985l-17.774-17.578c-2.344-2.344-5.469-3.711-8.789-3.711-3.32 0-6.445 1.367-8.789 3.71l-79.687 79.493-44.141-44.14c-2.344-2.344-5.469-3.712-8.79-3.712-3.32 0-6.444 1.368-8.788 3.711l-17.774 17.579c-2.343 2.343-3.515 5.664-3.515 8.984 0 3.32 1.172 6.445 3.515 8.789l70.704 70.703c2.343 2.344 5.664 3.711 8.789 3.711 3.32 0 6.64-1.367 8.984-3.71l106.055-106.056c2.343-2.343 3.515-5.468 3.515-8.789ZM600.5 284c0 82.813-67.188 150-150 150-82.813 0-150-67.188-150-150 0-82.813 67.188-150 150-150 82.813 0 150 67.188 150 150Z\"/\u003e\n\u003c/svg\u003e\n\n        \u003c/span\u003eTipp\u003c/p\u003e\u003cp\u003eWenn Sie vorhaben, über die Schaltfläche \u003cem\u003eCreate Template\u003c/em\u003e ein Template zu erstellen, sichern Sie sich zuvor die Datei \u003ccode\u003efrontmatter.json\u003c/code\u003e. Denn diese Vorgehensweise überschreibt gern diese Datei. Die folgende Anleitung verzichtet auf den Einsatz dieser Aktionsschaltfläche.\u003c/p\u003e\u003c/div\u003e\n\n\u003ch3 id=\"template-erstellen\"\u003eTemplate erstellen\u003c/h3\u003e\n\u003cp\u003e\u003cstrong\u003e(1)\u003c/strong\u003e - Erstellen Sie einmalig einen Ordner \u003ccode\u003e.frontmatter/templates\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e(2)\u003c/strong\u003e - Kopieren Sie eine Markdown-Datei in diesen neuen Ordner \u003ccode\u003etemplates\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e(3)\u003c/strong\u003e - Passen Sie die Datei so an, dass sie Ihren Vorstellungen eines Templates enspricht. \u003ca href=\"https://frontmatter.codes/docs/content-creation/placeholders\"\u003ePlatzhalter\u003c/a\u003e wie in der Datei \u003ccode\u003efrontmatter.json\u003c/code\u003e sind nicht möglich.\u003c/p\u003e\n\u003cp\u003eSie können beliebig viele Template-Dateien erstellen. Beim Benutzen der Templates werden diese Ihnen in einer Auswahlliste angeboten.\u003c/p\u003e\n\u003ch3 id=\"template-benutzen\"\u003eTemplate benutzen\u003c/h3\u003e\n\u003cp\u003e\u003cstrong\u003e(1)\u003c/strong\u003e - Klicken Sie in der linken Symbolschaltflächen-Leiste auf das Icon \u003cem\u003eExplorer\u003c/em\u003e und wechseln Sie in den VSCode-Dateiexplorer.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e(2)\u003c/strong\u003e - Machen Sie einen rechten Mausklick auf den Content-Ordner, in der die neue Markdown-Datei angelegt werden soll. Z.B. \u003ccode\u003econtent/blog\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e(3)\u003c/strong\u003e - Wählen Sie im Kontextmenü den Eintrag \u003cem\u003eFrontmatter \u0026gt; New Article from template\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e(4)\u003c/strong\u003e - Wählen Sie die entsprechende Template-Datei aus, auf dessen Grundlage die neue Datei entstehen soll.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e(5)\u003c/strong\u003e - Editieren Sie die Datei wie gewohnt und passen Sie den YAML-Header an.\u003c/p\u003e\n\u003ch3 id=\"weitere-quellen\"\u003eWeitere Quellen\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/watch?v=oA5ocNaiAtY\"\u003eVideo: How you can use content-types in Front Matter CMS\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://frontmatter.codes/\"\u003eFrontmatter CMS\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","date_modified":"2024-12-04T19:41:27Z","date_published":"2024-12-04T19:41:27Z","id":"http://localhost:1313/blog/templates-nutzen-in-frontmatter-cms/","summary":"\u003cp\u003eBisher habe ich meine Asciidoc- und Markdown-Dateien in VSCode erstellt. Das macht aber nicht so viel Spaß. Nun habe ich das \u003ca href=\"https://route360.dev/en/post/frontmatter-cms/\"\u003eHeadless-CMS\u003c/a\u003e FrontMatter entdeckt. Statt zu tippen klicke ich jetzt auf Schaltflächen.\u003c/p\u003e","tags":["hugo","blogging"],"title":"Templates nutzen in FrontMatter CMS","url":"http://localhost:1313/blog/templates-nutzen-in-frontmatter-cms/"},{"content_html":"\u003cp\u003eIn Markdown kann man standardmäßig nur Links zu Webseiten erstellen, die im selben Tab öffnen, nicht jedoch in einem neuen Tab geöffnet werden mit Hilfe des Attributs \u003ccode\u003etarget=\u0026quot;_blank\u0026quot;\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eDa ich inzwischen für das Schreiben meiner Hugo-Blogposts das Headless-CMS \u003ca href=\"https://frontmatter.codes\"\u003eFrontmatter\u003c/a\u003e nutze, möchte ich für einfache Texte wieder vermehrt Markdown nutzen.\u003c/p\u003e\n\u003cp\u003eQuelle: \u003ca href=\"https://discourse.gohugo.io/t/how-to-target--blank-in-md/524/19\"\u003eHow to target blank in md?\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"anleitung\"\u003eAnleitung\u003c/h3\u003e\n\u003cp\u003eDas Attribut \u003ccode\u003etarget=\u0026quot;_blank\u0026quot;\u003c/code\u003e kann man mit Hilfe von Hugo-Shortcodes realisieren.\u003c/p\u003e\n\u003cstyle type=\"text/css\"\u003e\n     \n    .notice {\n        --title-color: #fff;\n        --title-background-color: #6be;\n        --content-color: #444;\n        --content-background-color: #e7f2fa;\n    }\n\n    .notice.comment {\n        --title-background-color: #99bda2;\n        --content-background-color: #efe;\n    }\n\n    .notice.info {\n        --title-background-color: #fb7;\n        --content-background-color: #fec;\n    }\n\n    .notice.tip {\n        --title-background-color: #5a5;\n        --content-background-color: #efe;\n    }\n\n    .notice.warning {\n        --title-background-color: #c33;\n        --content-background-color: #fee;\n    }\n\n\n     \n    .notice {\n        padding: 18px;\n        line-height: 24px;\n        margin-bottom: 24px;\n        margin-top: 26px;\n        border-radius: 4px;\n        color: var(--content-color);\n        background: var(--content-background-color);\n    }\n\n    .notice p:last-child {\n        margin-bottom: 0\n    }\n\n     \n    .notice-title {\n        margin: -18px -18px 12px;\n        padding: 4px 18px;\n        border-radius: 4px 4px 0 0;\n        font-weight: 700;\n        color: var(--title-color);\n        background: var(--title-background-color);\n    }\n\n     \n    .icon-notice {\n        display: inline-flex;\n        align-self: center;\n        margin-right: 8px;\n    }\n\n    .icon-notice img,\n    .icon-notice svg {\n        height: 1em;\n        width: 1em;\n        fill: currentColor;\n    }\n\n    .icon-notice img,\n    .icon-notice.baseline svg {\n        top: .125em;\n        position: relative;\n    }\n\u003c/style\u003e\u003cdiv class=\"notice info\" \u003e\n    \u003cp class=\"notice-title\"\u003e\n        \u003cspan class=\"icon-notice baseline\"\u003e\n            \u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"92 59.5 300 300\"\u003e\n  \u003cpath d=\"M292 303.25V272c0-3.516-2.734-6.25-6.25-6.25H267v-100c0-3.516-2.734-6.25-6.25-6.25h-62.5c-3.516 0-6.25 2.734-6.25 6.25V197c0 3.516 2.734 6.25 6.25 6.25H217v62.5h-18.75c-3.516 0-6.25 2.734-6.25 6.25v31.25c0 3.516 2.734 6.25 6.25 6.25h87.5c3.516 0 6.25-2.734 6.25-6.25Zm-25-175V97c0-3.516-2.734-6.25-6.25-6.25h-37.5c-3.516 0-6.25 2.734-6.25 6.25v31.25c0 3.516 2.734 6.25 6.25 6.25h37.5c3.516 0 6.25-2.734 6.25-6.25Zm125 81.25c0 82.813-67.188 150-150 150-82.813 0-150-67.188-150-150 0-82.813 67.188-150 150-150 82.813 0 150 67.188 150 150Z\"/\u003e\n\u003c/svg\u003e\n\n        \u003c/span\u003eVoraussetzung\u003c/p\u003e\u003cp\u003eDamit HTML-Code innerhalb der Markdown-Datei gerendert wird, muss einmalig in der \u003ccode\u003econfig.toml\u003c/code\u003e folgender Eintrag gemacht werden:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e[markup.goldmark.renderer]\nunsafe = true\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003cstrong\u003e(1)\u003c/strong\u003e - Erstellen Sie einen neuen Ordner \u003ccode\u003eshortcodes\u003c/code\u003e im Hugo-Verzeichnis \u003ccode\u003elayouts\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e(2)\u003c/strong\u003e - Erstellen Sie im neuen Verzeichnis eine neue HTML-Datei. Ich nenne sie wie im Beispiel unter Quellen \u003ccode\u003ea_blank.html\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e(3)\u003c/strong\u003e - Fügen Sie diesen Code hinein:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u0026lt;a target=\u0026#34;_blank\u0026#34; href=\u0026#34;{{ .Get 1 }}\u0026#34;\u0026gt;{{ .Get 0 | markdownify }}\u0026lt;/a\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003e(4)\u003c/strong\u003e - In der eigentlichen Markdown-Content-Datei fügen Sie den Shortcode folgendermaßen ein:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e{{% a_blank \u0026#34;Shortcodes linking\u0026#34; \u0026#34;https://www.petersell.de\u0026#34; %}}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eKlickt man jetzt auf diesen Link \u003ca target=\"_blank\" href=\"https://www.petersell.de\"\u003eShortcodes linking\u003c/a\u003e\n, öffnet sich die Webseite in einem neuen Tab.\u003c/p\u003e\n\u003ch4 id=\"weitere-quellen\"\u003eWeitere Quellen\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://discourse.gohugo.io/t/hugo-0-60-0-raw-html-omitted-issue/22010/7\"\u003eRaw HTML omitted Fehler\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://gohugo.io/templates/shortcode/\"\u003egohugo.io - Create your own shortcodes\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","date_modified":"2024-12-02T18:13:16Z","date_published":"2024-12-02T18:13:16Z","id":"http://localhost:1313/blog/hugo-cms-link-im-neuen-tab-oeffnen/","summary":"\u003cp\u003eIn Markdown kann man standardmäßig nur Links zu Webseiten erstellen, die im selben Tab öffnen, nicht jedoch in einem neuen Tab geöffnet werden mit Hilfe des Attributs \u003ccode\u003etarget=\u0026quot;_blank\u0026quot;\u003c/code\u003e.\u003c/p\u003e","tags":["hugo","blogging"],"title":"Hugo - Link im neuen Tab öffnen lassen","url":"http://localhost:1313/blog/hugo-cms-link-im-neuen-tab-oeffnen/"},{"content_html":"\u003cp\u003eSeitdem ich von Windows auf Linux Fedora gewechselt bin, habe ich es versäumt, mir einen lokalen Hugo-Server zu installieren. Nun habe ich das nachgeholt: Mit dem Ergebnis, dass ich mir meine Blogposts vorher lokal anschauen kann, bevor ich sie mit Netlify auf Github veröffentliche.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e(1)\u003c/strong\u003e Auf der Konsole folgenden Befehl absetzen: \u003ccode\u003e$ sudo dnf install hugo\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e(2)\u003c/strong\u003e In das Projektverzeichnis gehen. Bei mir ist es: \u003ccode\u003ecd git/github/com.petersell.hugo\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e(3)\u003c/strong\u003e Das Kommando \u003ccode\u003ehugo server\u003c/code\u003e eingeben + ENTER. Danach sollte die Homepage im Browser unter \u003cem\u003elocalhost:1313\u003c/em\u003e abrufbar sein. Leider war dies bei mir nicht der Fall. Es erschien diese Fehlermeldung:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eError: error building site: \u0026#34;/git/github/com.petersell.hugo/content/blog/essay-ddrprotagonisten.adoc:1:1\u0026#34;: access denied: \u0026#34;asciidoctor\u0026#34; is not whitelisted in policy \u0026#34;security.exec.allow\u0026#34;; the current security configuration is:\n\n[security]\n  enableInlineShortcodes = false\n\n  [security.exec]\n    allow = [\u0026#39;^go$\u0026#39;, \u0026#39;^npx$\u0026#39;, \u0026#39;^postcss$\u0026#39;]\n    osEnv = [\u0026#39;(?i)^((HTTPS?|NO)_PROXY|PATH(EXT)?|APPDATA|TE?MP|TERM|GO\\w+|(XDG_CONFIG_)?HOME|USERPROFILE|SSH_AUTH_SOCK|DISPLAY|LANG)$\u0026#39;]\n\n  [security.funcs]\n    getenv = [\u0026#39;^HUGO_\u0026#39;, \u0026#39;^CI$\u0026#39;]\n\n  [security.http]\n    methods = [\u0026#39;(?i)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eHier fand ich eine Fehlerbehebung: \u003ca href=\"https://gohugo.io/about/security/\"\u003ehttps://gohugo.io/about/security/\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIn \u003ca href=\"https://github.com/gohugoio/hugo/releases/tag/v0.91.0\"\u003eHugo v0.91.0\u003c/a\u003e and newer, you can specify a project’s security policy in a config file.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003e(4)\u003c/strong\u003e Ich hatte neben Markdown-Dateien auch asciidoc-Dateien in meinem Hugo-Projekt eingebunden. In der Datei \u003cem\u003econfig.toml\u003c/em\u003e in meinem Homepage-Hauptverzeichnis musste ich folgendes hinzufügen: \u0026lsquo;^asciidoctor$\u0026rsquo;\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e[security]\n  [security.exec]\n    allow = [\u0026#39;^go$\u0026#39;, \u0026#39;^npx$\u0026#39;, \u0026#39;^postcss$\u0026#39;, \u0026#39;^asciidoctor$\u0026#39;]\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eJetzt wurde die Homepage gebuildet und war im Browser via \u003cem\u003elocalhost:1313\u003c/em\u003e aufrufbar.\u003c/p\u003e\n\u003cp\u003eQuelle: \u003ca href=\"https://developer.fedoraproject.org/start/sw/web-app/hugo.html\"\u003ehttps://developer.fedoraproject.org/start/sw/web-app/hugo.html\u003c/a\u003e\u003c/p\u003e","date_modified":"2024-11-25T19:44:01Z","date_published":"2024-11-25T19:44:01Z","id":"http://localhost:1313/blog/hugo-cms-auf-linux-mit-asciidoc/","summary":"\u003cp\u003eSeitdem ich von Windows auf Linux Fedora gewechselt bin, habe ich es versäumt, mir einen lokalen Hugo-Server zu installieren. Nun habe ich das nachgeholt: Mit dem Ergebnis, dass ich mir meine Blogposts vorher lokal anschauen kann, bevor ich sie mit Netlify auf Github veröffentliche.\u003c/p\u003e","tags":["asciidoc","hugo","linux"],"title":"Hugo CMS mit Asciidoc auf Linux installieren","url":"http://localhost:1313/blog/hugo-cms-auf-linux-mit-asciidoc/"},{"content_html":"\u003cp\u003eUm mir vor Augen zu führen, wie schnell die Zeit vergeht und wie viel Zeit mir noch verbleibt, meine Ziele für das Jahr zu erreichen, blende ich mir in \u003ca href=\"https://obsidian.md/\"\u003eObisidian\u003c/a\u003e die Nummer des Tages und der Woche im Header meiner Tagesnotiz ein.\u003c/p\u003e\n\u003cp\u003eSo steht es im \u003cem\u003eDaily Note Template\u003c/em\u003e.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e{{date:DDDD}}/365 | {{date:W}}/52\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eUnd so sieht es in der erzeugten Tagesnotiz aus.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e075/365 | 11/52\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eSo, ich muss Schluss machen! Ich habe nicht mehr viel Zeit.\u003c/p\u003e\n\u003cp\u003eQuelle: \u003ca href=\"https://peakd.com/hive-122108/@iwannabeme/automating-obsidian-workflows-with-templates\"\u003ehttps://peakd.com/hive-122108/@iwannabeme/automating-obsidian-workflows-with-templates\u003c/a\u003e\u003c/p\u003e","date_modified":"2024-03-15T00:00:00Z","date_published":"2024-03-15T00:00:00Z","id":"http://localhost:1313/blog/tagesnotiz-wieviel-tage-sind-schon-um/","summary":"\u003cp\u003eUm mir vor Augen zu führen, wie schnell die Zeit vergeht und wie viel Zeit mir noch verbleibt, meine Ziele für das Jahr zu erreichen, blende ich mir in \u003ca href=\"https://obsidian.md/\"\u003eObisidian\u003c/a\u003e die Nummer des Tages und der Woche im Header meiner Tagesnotiz ein.\u003c/p\u003e","tags":["obsidian"],"title":"Tagesnotiz - Wieviel Tage sind schon um?","url":"http://localhost:1313/blog/tagesnotiz-wieviel-tage-sind-schon-um/"},{"content_html":"\u003cp\u003eStatt Zettelkasten und meinen Roman zu schreiben, erstelle ich mit Obsidian einen Habit-Tracker. Das Prokrastinieren wird durch \u003ca href=\"https://obsidian.md/\"\u003eObisidian\u003c/a\u003e auf eine ganz neue Ebene gehoben.\u003c/p\u003e\n\u003cp\u003eJeder der etwas auf sich hält, hat \u003cem\u003eAtomic Habits\u003c/em\u003e von James Clear gelesen und werkelt mit Obsidian herum, das gelesene irgendwie umzusetzen. Ich auch, denn es macht einfach Spaß.\u003c/p\u003e\n\u003ch2 id=\"zweimal-wöchentlich-laufen\"\u003eZweimal wöchentlich laufen\u003c/h2\u003e\n\u003cp\u003eZweimal in der Woche möchte ich mindestens joggen gehen. Besser noch dreimal. Beides verbuche ich als Erfolg. Jahrelang habe ich mir diesen Erfolg in meinen Taschenkalender eingetragen. Jetzt gibt es aber Obsidian.\u003c/p\u003e\n\u003cp\u003eIch möchte in einer Monatsübersicht sehen, wie oft ich in jeder Woche joggen war. Dazu habe ich mir das Plugin \u003cem\u003eTracker\u003c/em\u003e installiert.\u003c/p\u003e\n\u003ch3 id=\"tracker-einrichten---monatsübersicht\"\u003eTracker einrichten - Monatsübersicht\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003eIn meinem \u003cem\u003eDaily Template\u003c/em\u003e richte ich im YAML-Header einen neuen Wert  \u003cem\u003ejogging:\u003c/em\u003e ein. Hier muss später in jeder neu erstellten Tagesnotiz hinter dem Doppelpunkt eine 0 oder 1 eingetragen werden - je nach dem, ob ich joggen war.\u003c/li\u003e\n\u003cli\u003eIn die Tagesnotizen der letzten Wochen trage ich rückwirkend ebenfalls den Wert \u003cem\u003ejoggen: 0/1\u003c/em\u003e ein, je nach dem, ob ich an diesen Tagen joggen war.\u003c/li\u003e\n\u003cli\u003eIch lege einen neuen Ordner \u003cem\u003eHabits\u003c/em\u003e an.\u003c/li\u003e\n\u003cli\u003eIch lege eine neue Notiz \u003cem\u003eJogging Tracker\u003c/em\u003e in diesem Ordner an. Es entsteht also eine Datei \u003ccode\u003eHabits/Jogging Tracker.md\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eIn diese Notiz trage ich folgendes ein:\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e---tracker\nsearchType: frontmatter\nsearchTarget: jogging\nfolder: Journal/01 - Daily/2024-daily\ndatasetName: Jogging\nmonth:\n  startWeekOn: Mon\n---\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eHinweis: anstelle der 3 Bindestriche müssen die 3 Apostrophe (Auslassungszeichen) der Tracker-Syntax gesetzt werden.\u003c/p\u003e\n\u003cp\u003eDas Verzeichnis unter \u003cem\u003efolder\u003c/em\u003e ist das Verzeichnis, wo derzeit meine Tagesnotizen gespeichert werden.\u003c/p\u003e\n\u003cp\u003eGehe ich nun aus der \u003cem\u003eBearbeiten\u003c/em\u003e-Ansicht heraus, zeigt sich ein Monatskalender mit farbigen Kreisen an den Tagen, an denen ich joggen war. Da ich die Woche mit \u003cem\u003eMontag\u003c/em\u003e anfangen lassen möchte, füge ich \u003ccode\u003estartWeekOn: Mon\u003c/code\u003e unter \u003ccode\u003emonth\u003c/code\u003e hinzu.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"../images/obsidian/habit-tracker-month.png\" alt=\"Wochenübersicht\"\u003e\u003c/p\u003e\n\u003ch2 id=\"unter-14-minuten-laufen\"\u003eUnter 14 Minuten laufen\u003c/h2\u003e\n\u003cp\u003eDas Joggen allein ist schon ein Erfolg. Man hat seinen inneren Schweinehund überwunden und das Haus verlassen. Aber ein bisschen Ehrgeiz entwickelt man auch. So habe ich mir vorgenommen, nicht jeden Tag 1% besser zu werden wie James Clear, aber doch mindestens unter 14 Minuten zu bleiben. Um zu sehen, wie oft ich meine Mindestanforderung nicht erfüllen konnte, habe ich mir ein schönes Liniendiagramm gebastelt.\u003c/p\u003e\n\u003ch3 id=\"tracker-einrichten---liniendiagramm\"\u003eTracker einrichten - Liniendiagramm\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003eIn meinem \u003cem\u003eDaily Template\u003c/em\u003e habe ich im YAML-Header  einen weiteren Wert einführt: \u003cem\u003ejoggingzeit:\u003c/em\u003e.\u003c/li\u003e\n\u003cli\u003eIn die Tagesnotizen der letzten Wochen trage ich ebenfalls diesen Wert \u003cem\u003ejoggingzeit:\u003c/em\u003e ein. In meinem Taschenkalender stehen meine notierten Zeiten der vergangen Jogging-Touren. Jedoch statt \u003cem\u003e13,12\u003c/em\u003e für 13 Minuten und 12 Sekunden trage ich \u003cem\u003e13.12\u003c/em\u003e hinter den Wert \u003cem\u003ejoggingzeit:\u003c/em\u003e ein. Statt des Kommas also einen Punkt.\u003c/li\u003e\n\u003cli\u003eIch erstelle eine neue Notiz \u003cem\u003eJoggingzeit Tracker\u003c/em\u003e in meinem neuen Ordner \u003cem\u003eHabits\u003c/em\u003e.\u003c/li\u003e\n\u003cli\u003eIn diese Notiz trage ich folgendes:\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e---tracker\nsearchType: frontmatter\nsearchTarget: joggingtime\nfolder: Journal/01 - Daily/2024-daily\nline:\n\tfillGap: true\n\treverseYAxis: true\n---\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWechsle ich nun vom Editier-Modus in die Lese-Ansicht, zeigt sich ein Graph mit X- und Y-Achse und einer Linie zwischen den Zeitwerten.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"../images/obsidian/habit-tracker-line.png\" alt=\"Liniendiagramm\"\u003e\u003c/p\u003e\n\u003cp\u003eDamit zwischen den unregelmäßigen Datumsangaben eine Linie gezogen wird, muss das Attribut \u003ccode\u003efillGap: true\u003c/code\u003e zur \u003cem\u003eline\u003c/em\u003e hinzugefügt werden.\u003c/p\u003e\n\u003cp\u003eDamit die höchste Zeit als schlechtes Ergebnis ausgegeben wird, muss die Y-Achse umgedreht werden mit \u003ccode\u003ereverseYAxis: true\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eQuelle und Inspiration:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/watch?v=W_leEJHBZW4\"\u003ehttps://www.youtube.com/watch?v=W_leEJHBZW4\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/pyrochlore/obsidian-tracker/blob/master/docs/InputParameters.md\"\u003ehttps://github.com/pyrochlore/obsidian-tracker/blob/master/docs/InputParameters.md\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e","date_modified":"2024-03-10T00:00:00Z","date_published":"2024-03-10T00:00:00Z","id":"http://localhost:1313/blog/habit-tracker-mit-obsidian-erstellen/","summary":"\u003cp\u003eStatt Zettelkasten und meinen Roman zu schreiben, erstelle ich mit Obsidian einen Habit-Tracker. Das Prokrastinieren wird durch \u003ca href=\"https://obsidian.md/\"\u003eObisidian\u003c/a\u003e auf eine ganz neue Ebene gehoben.\u003c/p\u003e","tags":["obsidian"],"title":"Einen Habit-Tracker mit Obsidian erstellen","url":"http://localhost:1313/blog/habit-tracker-mit-obsidian-erstellen/"},{"content_html":"\u003cp\u003eDie Zettelkastenmethode erhält seit einigen Jahren in der Blogosphäre viel Aufmerksamkeit. Nicht immer ist das Fazit ein gutes. So manch einer wendet sich vom Zettelkastenprinzip wieder ab.\u003c/p\u003e\n\u003cp\u003eBrauche ich auch einen Zettelkasten? Wenn ja, welche Mindestbedingungen müssen erfüllt sein, damit ein Zettelkasten funktioniert?\u003c/p\u003e\n\u003ch2 id=\"bedingung-1\"\u003eBedingung 1\u003c/h2\u003e\n\u003cp\u003eEin Zettelkasten ist nur von Nutzen, wenn Sie in Zukunft Texte schreiben wollen.\u003c/p\u003e\n\u003cp\u003eEin \u003cstrong\u003eZettel\u003c/strong\u003e ist eine mit eigenen Worten formulierte Idee oder ein Gedanke, der später im formuliertem Fließtext Verwendung findet. Eine \u003cstrong\u003eNotiz\u003c/strong\u003e über eine Sache, einer Alltagsroutine oder Handlungsanleitung dient einem effizienten Leben, nicht aber der Produktion von Texten.\u003c/p\u003e\n\u003ch2 id=\"bedingung-2\"\u003eBedingung 2\u003c/h2\u003e\n\u003cp\u003eSie müssen die \u003cem\u003eFlüchtigen Notizen\u003c/em\u003e und die permanenten \u003cem\u003eLektürenotizen\u003c/em\u003e streng von den ausformulierten \u003cem\u003eZetteln\u003c/em\u003e trennen. Beide sind nicht aus eigenen Fragestellungen und Gedanken entstanden.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eUpdate 2024-12-19:\u003c/em\u003e Sie müssen gar nichts trennen. Im Gegenteil. Sie dürfen nur nicht vergessen, aus den Lektürezetteln (Zitate) neue, eigene Hauptzettel/Main Notes zu entwickeln.\u003c/p\u003e\n\u003ch2 id=\"bedingung-3\"\u003eBedingung 3\u003c/h2\u003e\n\u003cp\u003eWerten Sie \u003cem\u003eLektürenotizen\u003c/em\u003e und \u003cem\u003eFlüchtige Notizen\u003c/em\u003e aus: schreiben Sie in dauerhaft verständlicher Form jeweils einen Gedanken auf einen Zettel inkl. Quellenangaben. Durch das Fragestellen, das Einsortieren (Folgezettel),  das Verlinken, das Formulieren in eigenen Worten, das Erstellen von Tags wird der Zettelkasten zu einer Art \u003cem\u003eSchreibturbo\u003c/em\u003e.\u003c/p\u003e","date_modified":"2024-02-25T00:00:00Z","date_published":"2024-02-25T00:00:00Z","id":"http://localhost:1313/blog/drei-bedingungen-fuer-den-erfolg-eines-zettelkastens/","summary":"\u003cp\u003eDie Zettelkastenmethode erhält seit einigen Jahren in der Blogosphäre viel Aufmerksamkeit. Nicht immer ist das Fazit ein gutes. So manch einer wendet sich vom Zettelkastenprinzip wieder ab.\u003c/p\u003e","tags":null,"title":"Drei Bedingungen für den Erfolg eines Zettelkastens","url":"http://localhost:1313/blog/drei-bedingungen-fuer-den-erfolg-eines-zettelkastens/"},{"content_html":"\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eSie generieren DITA-Output mit Hilfe eines DITA-OT-Images. Aber wie generieren Sie Output mit Hilfe eines Plugins, dass nicht standardmäßig in das DITA-OT integriert ist und von Ihnen angepaßt wurde?\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"sect1\"\u003e\n\u003ch2 id=\"_kontext\"\u003eKontext\u003c/h2\u003e\n\u003cdiv class=\"sectionbody\"\u003e\n\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eWarum sollte ich als DITA-Redakteur \u003cem\u003eDocker\u003c/em\u003e und ähnliches benutzen? Was bringt mir das? Auf den Punkt gebracht: das eigene Überleben als DITA-Redakteur.\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"imageblock\"\u003e\n\u003cdiv class=\"content\"\u003e\n\u003cimg src=\"../images/dita-ot-bootstrap-mit-docker/containerschiff.jpg\" alt=\"DITA-Kapitän\" width=\"80%\"/\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eSie sind der Kapitän auf einem großen Schiff voller Container. In jedem Container befindet sich entweder eine Version des DITA-Open-Toolkits oder ein DITA-OT-Plugin. Wenn Sie ein PDF oder HTML-Output benötigen, suchen Sie sich ein DITA-OT heraus, fügen ein oder mehrere Plugins hinzu und starten den Build.\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"olist arabic\"\u003e\n\u003col class=\"arabic\"\u003e\n\u003cli\u003e\n\u003cp\u003eSie haben also eine große Auswahl an DITA-OT-Versionen und Plugins. Sie können sofort das neueste testen und gebrauchen.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eNie wieder müssen Sie sich Gedanken machen, welches Java das DITA-OT benötigt. Nie wieder müssen Sie einen DITA-OT/bin-Pfad in die Umgebungsvariablen Ihres Betriebssystem schreiben.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eSie können das verwendete Image anderen bekannt geben, so dass diese mit dem selben DITA-OT builden.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eSie überleben als DITA-Redakteur, weil Sie schneller, flexibler, unabhängiger und aktueller sind.\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eMein Sohn hatte mir einen neuen Rechner aufgebaut - mit Linux! Nun mußte ich sämtliche Programme neu installieren. Gottseidank stieß ich innerhalb der DITA-Dokumention auf den Artikel \u003ca href=\"https://www.dita-ot.org/dev/topics/using-docker-images.html\"\u003eRunning the dita command from a Docker image\u003c/a\u003e. Inzwischen gelingt es mir, mit Hilfe von Docker Standard-HTML-Output zu generieren.\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eAber ich möchte das Aussehen verändern mit Hilfe des Plugins \u003ca href=\"https://github.com/infotexture/dita-bootstrap\"\u003eDITA Bootstrap\u003c/a\u003e von Roger W. Fienhold Sheen. Dafür hat letzterer \u003ca href=\"https://www.dita-ot.org/dev/topics/creating-docker-images.html\"\u003eeine Anleitung\u003c/a\u003e in der offiziellen Dokumentation geschrieben.\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eZu guter Letzt möchte ich das DITA-Bootstrap-Plugin anpassen: mit meinen Farben, meinen Menü-Bezeichnungen, meine Header- und Footer-Datei einbinden uvm. Dazu hinterlege ich meine Version des Bootstrap-Plugins in ein Github-Repository.\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"sect1\"\u003e\n\u003ch2 id=\"_anleitung\"\u003eAnleitung\u003c/h2\u003e\n\u003cdiv class=\"sectionbody\"\u003e\n\u003cdiv class=\"admonitionblock tip\"\u003e\n\u003ctable\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003ctd class=\"icon\"\u003e\n\u003cdiv class=\"title\"\u003eTip\u003c/div\u003e\n\u003c/td\u003e\n\u003ctd class=\"content\"\u003e\n\u003cdiv class=\"title\"\u003eVoraussetzung\u003c/div\u003e\n\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eSie haben Docker installiert.\u003c/p\u003e\n\u003c/div\u003e\n\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003cdiv class=\"sect2\"\u003e\n\u003ch3 id=\"_1_bootstrap_plugin_anpassen_und_bereitstellen\"\u003e1) Bootstrap-Plugin anpassen und bereitstellen\u003c/h3\u003e\n\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eSie möchten ein Plugin nach Ihren Wünschen anpassen. Also gilt es, das Plugin von einem Git-Repository downzuloaden, es anzupassen und anschließend in ein eigenes Repository innerhalb Ihres Git-Anbieters hochzuladen.\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eIch bin kein Git-Experte, darum hier mein Weg, der für mich funktioniert:\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"olist arabic\"\u003e\n\u003col class=\"arabic\"\u003e\n\u003cli\u003e\n\u003cp\u003eFremdes Repository (z.B. \u003ca href=\"https://github.com/infotexture/dita-bootstrap\"\u003eDITA-Bootstrap\u003c/a\u003e) klonen, so dass in einem lokalen Ordner ein neues Verzeichnis \u003cem\u003eA\u003c/em\u003e entsteht.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eAuf der Github-Webseite in Ihrem Github-Account ein neues Repo erstellen und ebenfalls klonen, so dass ein zweiter Ordner \u003cem\u003eB\u003c/em\u003e entsteht.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eAnschließend den Inhalt des Ordners \u003cem\u003eA\u003c/em\u003e in den Ordner \u003cem\u003eB\u003c/em\u003e kopieren (ohne das Verzeichnis \u003ccode\u003e.git\u003c/code\u003e und den anderen Git-Dateien).\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDas Plugin nach Ihren wünschen anpassen. Der Titel \u003cem\u003eDITA-Bootstrap\u003c/em\u003e könnte z.B. in Ihren Wunschtitel geändert werden.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDen Ordner \u003cem\u003eB\u003c/em\u003e, der ja unser eigenes, geklontes lokales Repo ist, auf das remote Github-Repo \u003cem\u003epushen\u003c/em\u003e (aktualisieren).\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"sect2\"\u003e\n\u003ch3 id=\"_2_dockerfile_erstellen\"\u003e2) Dockerfile erstellen\u003c/h3\u003e\n\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eErstellen Sie innerhalb Ihres DITA-XML-Quelldateien-Ordners eine neue Textdatei mit Namen \u003ccode\u003eDockerfile\u003c/code\u003e. Schreiben Sie folgendes hinein:\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"listingblock\"\u003e\n\u003cdiv class=\"title\"\u003eDockerfile im Quelldateien-Ordner\u003c/div\u003e\n\u003cdiv class=\"content\"\u003e\n\u003cpre class=\"highlight\"\u003e\u003ccode\u003e# Use the latest DITA-OT image ↓ as parent:\nFROM ghcr.io/dita-ot/dita-ot:4.0.1\n\n# Install a custom plug-in from a remote location:\nRUN dita --install https://github.com/jason-fox/fox.jason.extend.css/archive/master.zip\n\n# Install a custom plug-in from a remote location:\nRUN dita --install https://github.com/petersell/zks-bootstrap-5-3-2/archive/master.zip\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eSie müssen natürlich Ihr eigenes Repository im zweiten RUN-Befehl angeben in der Form \u003ca href=\"https://github.com/user/repository\" class=\"bare\"\u003ehttps://github.com/user/repository\u003c/a\u003e\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eFür das eigene Repository muss eine Zip-Datei bereitgehalten werden. Diese muss man nicht extra erstellen, denn das übernimmt Github. Schreiben Sie einfach \u003ccode\u003e/archive/master.zip\u003c/code\u003e ans Ende der Repository-URL, um aus dem Masterbranch eine Zipdatei zu erstellen.\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eSo wird aus \u003cem\u003e\u003ca href=\"http://github.com/user/repository.git\" class=\"bare\"\u003ehttp://github.com/user/repository.git\u003c/a\u003e\u003c/em\u003e dann \u003cem\u003e\u003ca href=\"http://github.com/user/repository/archive/master.zip\" class=\"bare\"\u003ehttp://github.com/user/repository/archive/master.zip\u003c/a\u003e\u003c/em\u003e.\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"sect2\"\u003e\n\u003ch3 id=\"_3_image_bauen\"\u003e3) Image bauen\u003c/h3\u003e\n\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eAuf der Grundlage der Datei \u003ccode\u003eDockerfile\u003c/code\u003e wird jetzt ein lokales Image erstellt. Öffnen Sie ein Kommandozeilen-Fenster und gehen Sie in Ihr DITA-Quellverzeichnis, weil sich darin Ihre \u003ccode\u003eDockerfile\u003c/code\u003e befindet.\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eGeben Sie folgenden Befehl ein:\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"listingblock\"\u003e\n\u003cdiv class=\"title\"\u003eBuildfehl auf Konsole\u003c/div\u003e\n\u003cdiv class=\"content\"\u003e\n\u003cpre class=\"highlight\"\u003e\u003ccode\u003e$ docker image build -t ditaot-bootstrap-docker-image:1.0 .\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eSie können Ihrem Image natürlich einen anderen Namen vergeben als \u003cem\u003editaot-bootstrap-docker-image\u003c/em\u003e.\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eÜberprüfen Sie im selben Fenster, ob das Images gebaut wurde:\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"listingblock\"\u003e\n\u003cdiv class=\"content\"\u003e\n\u003cpre\u003e$ docker images\u003c/pre\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"sect2\"\u003e\n\u003ch3 id=\"_4_container_starten_für_den_build\"\u003e4) Container starten für den Build\u003c/h3\u003e\n\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eJetzt können Sie den Docker-Container starten, der auf diesem Docker-Image basiert. Da auf dem Container nun mal ein DITA-OT ist, heißt \u003cem\u003estarten\u003c/em\u003e zugleich DITA-Output builden. Dazu geben Sie dem run-Befehl die Eigenschaften mit auf auf den Weg, wie Sie es auch mit dem DITA-Build-Befehl auf lokaler Ebene tun würden: das DITA-Quellverzeichnis, die Haupt-Ditamap, den Output-Ordner sowie das Format (transtype).\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eGeben Sie folgenden Befehl im Kommandozeilen-Fenster ein:\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"listingblock\"\u003e\n\u003cdiv class=\"title\"\u003eDocker-Befehl auf der Konsole\u003c/div\u003e\n\u003cdiv class=\"content\"\u003e\n\u003cpre class=\"highlight\"\u003e\u003ccode\u003e$ docker container run -it \\\n  -v /home/andreas/DITA-ZKS:/src ditaot-bootstrap-docker-image:1.0 \\\n  -i /src/zks.ditamap \\\n  -o /src/out/dita-bootstrap \\\n  -f html5-bootstrap -v\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003ePassen Sie Ihren DITA-Quelldatei-Ordner entsprechend an. Bei mir heißt der DITA-Quelldatei-Pfad: \u003ccode\u003e/home/andreas/DITA-ZKS\u003c/code\u003e.\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eFalls Sie einen anderen Image-Namen statt \u003cem\u003editaot-bootstrap-docker-image\u003c/em\u003e gewählt haben, müssen Sie den Ihrigen vermerken.\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eEbenso heißt meine ditamap-Datei \u003cem\u003ezks.ditamap\u003c/em\u003e. Tragen Sie hier Ihre Ditamap ein.\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eDer Output landet innerhalb des DITA-Quellverzeichnisses im Verzeichnis \u003ccode\u003eout/dita-bootstrap\u003c/code\u003e.\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"imageblock\"\u003e\n\u003cdiv class=\"content\"\u003e\n\u003cimg src=\"../images/dita-ot-bootstrap-mit-docker/dita-ot-bootstrap-mit-docker.png\" alt=\"Bootstrap-Output\" width=\"90%\"/\u003e\n\u003c/div\u003e\n\u003cdiv class=\"title\"\u003eAbb. 1: Der Bootstrap-Output\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eNach dem Docker-Run-Befehl füllte sich mein output-Ordner \u003ccode\u003eout\u003c/code\u003e mit den gewünschten HTML-Seiten - jetzt aber im Bootstrap-Look des Plugins.\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e","date_modified":"2023-01-24T00:00:00Z","date_published":"2023-01-24T00:00:00Z","id":"http://localhost:1313/blog/dita-ot-plugin-auf-git-mit-docker/","summary":"\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eSie generieren DITA-Output mit Hilfe eines DITA-OT-Images. Aber wie generieren Sie Output mit Hilfe eines Plugins, dass nicht standardmäßig in das DITA-OT integriert ist und von Ihnen angepaßt wurde?\u003c/p\u003e\n\u003c/div\u003e","tags":["dita-xml","techcomm","docker"],"title":"Eigenen DITA-Bootstrap-Output mit Docker builden","url":"http://localhost:1313/blog/dita-ot-plugin-auf-git-mit-docker/"}]}