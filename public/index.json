{
    "version": "https://jsonfeed.org/version/1",
    "title": "Andreas Petersell",
    "home_page_url": "http://localhost:1313/",
    "feed_url": "http://localhost:1313/index.json",
    "description": "Recent content on Andreas Petersell", 
    "favicon": "http://localhost:1313/assets/icon.png", 
    "icon": "http://localhost:1313/assets/icon.png", 
    "author": {
        "name": "Andreas Petersell"
    },
    "items":[{"content_html":"\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eSie müssen nicht für jedes Output-Format des Asciidoctors ein Extra-Tool installieren. Sie brauchen eigentlich nur ein Docker-Image nutzen, egal welchen Output Sie aus Ihren adoc-Dateien generieren wollen.\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eDiese Quelle ermöglichte mir den Artikel: \u003ca href=\"https://github.com/asciidoctor/docker-asciidoctor\"\u003eAsciidoctor Docker Container\u003c/a\u003e\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"admonitionblock tip\"\u003e\n\u003ctable\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003ctd class=\"icon\"\u003e\n\u003cdiv class=\"title\"\u003eTip\u003c/div\u003e\n\u003c/td\u003e\n\u003ctd class=\"content\"\u003e\n\u003cdiv class=\"title\"\u003eVoraussetzung\u003c/div\u003e\n\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eSie haben Docker installiert.\u003c/p\u003e\n\u003c/div\u003e\n\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003cdiv class=\"sect1\"\u003e\n\u003ch2 id=\"_kontext\"\u003eKontext\u003c/h2\u003e\n\u003cdiv class=\"sectionbody\"\u003e\n\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eDa ich im Zusammenhang mit DITA XML bereits Docker installiert hatte, wußte ich, dass es für adoc-Dateien einen ähnlichen Weg des Bauens über ein Docker-Image geben müßte.\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eDas gibt es. Und das Schönes ist, dass der Build via Docker verschiedene Ausgabeformate abdeckt: HTML, PDF, EPUB3 und Confluence uvm.\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"sect1\"\u003e\n\u003ch2 id=\"_anleitung\"\u003eAnleitung\u003c/h2\u003e\n\u003cdiv class=\"sectionbody\"\u003e\n\u003cdiv class=\"olist arabic\"\u003e\n\u003col class=\"arabic\"\u003e\n\u003cli\u003e\n\u003cp\u003eDocker im Terminal starten: \u003ccode\u003esudo systemctl start docker\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eBuildbefehl eingeben + ENTER\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIm Output-Ordner das Ergebnis bestaunen\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n\u003cdiv class=\"sect2\"\u003e\n\u003ch3 id=\"_buildbefehl_anpassen\"\u003eBuildbefehl anpassen\u003c/h3\u003e\n\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eIn der readme-Datei des Projekts heißt es:\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"listingblock\"\u003e\n\u003cdiv class=\"title\"\u003eBuild-Befehl in der Dokumentation\u003c/div\u003e\n\u003cdiv class=\"content\"\u003e\n\u003cpre\u003edocker run -it \\\n  -u $(id -u):$(id -g) \\\n  -v \u0026lt;your directory\u0026gt;:/documents/ asciidoctor/docker-asciidoctor\u003c/pre\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eDiese Beispiel-Syntax gilt es anzupassen. Den Part \u003ccode\u003e-u $(id -u):$(id -g)\u003c/code\u003e sollten Sie in Ihrem Build-Befehl übernehmen. Er sorgt dafür, dass das Output-Verzeichnis editierbar ist. So können Sie z.B. einen Image-Ordner einfügen, wenn nötig.\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"listingblock\"\u003e\n\u003cdiv class=\"title\"\u003eMein angepaßter Build-Befehl\u003c/div\u003e\n\u003cdiv class=\"content\"\u003e\n\u003cpre class=\"highlight\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003edocker run --rm \\\n  -u $(id -u):$(id -g) \\\n  -v ~/sync/asciidoc:/documents asciidoctor/docker-asciidoctor \\ \u003cb class=\"conum\"\u003e(1)\u003c/b\u003e\n  asciidoctor -v -D /documents/homepage/output/ /documents/homepage/\u0026#39;**/*.adoc\u0026#39; \u003cb class=\"conum\"\u003e(2)\u003c/b\u003e\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"colist arabic\"\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eMein lokaler Ordner \u003ccode\u003esync/asciidoc\u003c/code\u003e wird mit dem Ordner \u003ccode\u003edocuments\u003c/code\u003e des Containers verbunden (mounted) und das Image \u003cem\u003easciidoctor/docker-asciidoctor\u003c/em\u003e wird benutzt.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eEs wird HTML-Output erzeugt in meinem lokalen Ordner \u003ccode\u003esync/asciidoc/homepage/output\u003c/code\u003e, denn \u003cem\u003edocuments\u003c/em\u003e ist ja gleichbedeutend mit \u003cem\u003esync/asciidoc\u003c/em\u003e. Da ich nicht nur eine, sondern mehrere adoc-Dateien hatte, musste ich bei der Quelldatei-Angabe am Ende mit der \u003ca href=\"https://docs.asciidoctor.org/asciidoctor/latest/cli/process-multiple-files/\"\u003eWildcard-Syntax\u003c/a\u003e arbeiten.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"sect1\"\u003e\n\u003ch2 id=\"_fazit\"\u003eFazit\u003c/h2\u003e\n\u003cdiv class=\"sectionbody\"\u003e\n\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eIch habe mir die Installation sämtlicher Asciidoctor-Build-Tools erspart und brauche mich nicht um Updates zu kümmern. Einfach Docker starten, Buildbefehl eingeben und mehrere Output-Formate erhalten.\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e","date_modified":"2025-09-15T00:00:00Z","date_published":"2025-09-15T00:00:00Z","id":"http://localhost:1313/blog/asciidoc-mit-docker/","summary":"\u003cdiv class=\"paragraph\"\u003e\n\u003cp\u003eSie müssen nicht für jedes Output-Format des Asciidoctors ein Extra-Tool installieren. Sie brauchen eigentlich nur ein Docker-Image nutzen, egal welchen Output Sie aus Ihren adoc-Dateien generieren wollen.\u003c/p\u003e\n\u003c/div\u003e","tags":["asciidoc","techcomm","docker"],"title":"Asciidoc mit Docker bauen","url":"http://localhost:1313/blog/asciidoc-mit-docker/"},{"content_html":"\n\u003ciframe title=\"Pixelfed Post Embed\" src=\"https://pixelfed.de/p/putbus/843561637584341039/embed?caption=true\u0026likes=false\u0026layout=full\" class=\"pixelfed__embed\" style=\"max-width: 100%; border: 0\" width=\"400\" allowfullscreen=\"allowfullscreen\"\u003e\u003c/iframe\u003e\u003cscript async defer src=\"https://pixelfed.de/embed.js\"\u003e\u003c/script\u003e\n\u003cp\u003eEin Besuch im Stasimuseum in der Nomannenstraße hilft immer gegen das Vergessen. Beeindruckend für mich waren die Beispielakten im Haus 7 innerhalb der Ausstellung zum Stasi-Unterlagen-Archiv. Bände voller bürokratisch-grotesker Widerwärtigkeiten, potenziert durch eine Organisation.\u003c/p\u003e","date_modified":"2025-06-25T00:00:00Z","date_published":"2025-06-25T00:00:00Z","id":"http://localhost:1313/status/warum/","summary":"Ein Besuch im Stasimuseum in der Nomannenstraße hilft immer gegen das Vergessen. Beeindruckend für mich waren die Beispielakten im Haus 7 innerhalb der Ausstellung zum Stasi-Unterlagen-Archiv. Bände voller bürokratisch-grotesker Widerwärtigkeiten, potenziert durch eine Organisation.","tags":["pixelfed"],"title":"Im Stasimuseum","url":"http://localhost:1313/status/warum/"},{"content_html":"\u003cp\u003eYou have a project on gitlab with the URL \u003cem\u003emyname.gitlab.io/project\u003c/em\u003e and would now like to redirect your subdomain \u003cem\u003e\u003ca href=\"https://www.myname.com\"\u003ewww.myname.com\u003c/a\u003e\u003c/em\u003e to your project in addition to your root domain \u003cem\u003emyname.com\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eQuelle: \u003ca href=\"https://docs.gitlab.com/user/project/pages/custom_domains_ssl_tls_certification/\"\u003eGitLab Pages custom domains\u003c/a\u003e\u003c/p\u003e\n\u003c!-- FM:Snippet:Start data:{\"id\":\"Admonition - Voraussetzung\",\"fields\":[]} --\u003e\n\u003cstyle type=\"text/css\"\u003e\n     \n    .notice {\n        --title-color: #fff;\n        --title-background-color: #6be;\n        --content-color: #444;\n        --content-background-color: #e7f2fa;\n    }\n\n    .notice.comment {\n        --title-background-color: #99bda2;\n        --content-background-color: #efe;\n    }\n\n    .notice.info {\n        --title-background-color: #fb7;\n        --content-background-color: #fec;\n    }\n\n    .notice.tip {\n        --title-background-color: #5a5;\n        --content-background-color: #efe;\n    }\n\n    .notice.warning {\n        --title-background-color: #c33;\n        --content-background-color: #fee;\n    }\n\n\n     \n    .notice {\n        padding: 18px;\n        line-height: 24px;\n        margin-bottom: 24px;\n        margin-top: 26px;\n        border-radius: 4px;\n        color: var(--content-color);\n        background: var(--content-background-color);\n    }\n\n    .notice p:last-child {\n        margin-bottom: 0\n    }\n\n     \n    .notice-title {\n        margin: -18px -18px 12px;\n        padding: 4px 18px;\n        border-radius: 4px 4px 0 0;\n        font-weight: 700;\n        color: var(--title-color);\n        background: var(--title-background-color);\n    }\n\n     \n    .icon-notice {\n        display: inline-flex;\n        align-self: center;\n        margin-right: 8px;\n    }\n\n    .icon-notice img,\n    .icon-notice svg {\n        height: 1em;\n        width: 1em;\n        fill: currentColor;\n    }\n\n    .icon-notice img,\n    .icon-notice.baseline svg {\n        top: .125em;\n        position: relative;\n    }\n\u003c/style\u003e\u003cdiv class=\"notice info\" \u003e\n    \u003cp class=\"notice-title\"\u003e\n        \u003cspan class=\"icon-notice baseline\"\u003e\n            \u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"92 59.5 300 300\"\u003e\n  \u003cpath d=\"M292 303.25V272c0-3.516-2.734-6.25-6.25-6.25H267v-100c0-3.516-2.734-6.25-6.25-6.25h-62.5c-3.516 0-6.25 2.734-6.25 6.25V197c0 3.516 2.734 6.25 6.25 6.25H217v62.5h-18.75c-3.516 0-6.25 2.734-6.25 6.25v31.25c0 3.516 2.734 6.25 6.25 6.25h87.5c3.516 0 6.25-2.734 6.25-6.25Zm-25-175V97c0-3.516-2.734-6.25-6.25-6.25h-37.5c-3.516 0-6.25 2.734-6.25 6.25v31.25c0 3.516 2.734 6.25 6.25 6.25h37.5c3.516 0 6.25-2.734 6.25-6.25Zm125 81.25c0 82.813-67.188 150-150 150-82.813 0-150-67.188-150-150 0-82.813 67.188-150 150-150 82.813 0 150 67.188 150 150Z\"/\u003e\n\u003c/svg\u003e\n\n        \u003c/span\u003eVoraussetzung\u003c/p\u003e\u003cp\u003eYou have access to the DNS entries of your domains with your web hosting service provider.\u003c/p\u003e\u003c/div\u003e\n\n\u003c!-- FM:Snippet:End --\u003e\n\u003ch3 id=\"cname-worked-fine\"\u003eCNAME worked fine\u003c/h3\u003e\n\u003cp\u003eThis is not a guide, as every web host service provider uses different forms to enter the various DNS entries.\u003c/p\u003e\n\u003cp\u003eMine uses the following values:\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eSubdomain\u003c/th\u003e\n\u003cth\u003eDomain\u003c/th\u003e\n\u003cth\u003eTyp\u003c/th\u003e\n\u003cth\u003eContent\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003ewww\u003c/td\u003e\n\u003ctd\u003emyname.com\u003c/td\u003e\n\u003ctd\u003eCNAME\u003c/td\u003e\n\u003ctd\u003emyname.gitlab.io.\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003eAnd so the CNAME entry worked immediately.\u003c/p\u003e\n\u003ch3 id=\"verification-by-trial-and-error\"\u003eVerification by trial and error\u003c/h3\u003e\n\u003cp\u003eBut it took me days to complete the verification. The Gitlab documentation uses this syntax as a default and alludes to the command line level.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e_gitlab-pages-verification-code.www.myname.com TXT gitlab-pages-verification-code=31e837733dd7174ada938b64\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eHowever, this example is not clear when filling in the form above. After several attempts, the following entry in the table worked.\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eSubdomain\u003c/th\u003e\n\u003cth\u003eDomain\u003c/th\u003e\n\u003cth\u003eTyp\u003c/th\u003e\n\u003cth\u003eContent\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e_gitlab-pages-verification-code.www\u003c/td\u003e\n\u003ctd\u003emyname.com\u003c/td\u003e\n\u003ctd\u003eTXT\u003c/td\u003e\n\u003ctd\u003egitlab-pages-verification-code=31e837733dd7174ada938b64\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003eThe verification status finally turned green: \u003cem\u003eVerified!\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eAt \u003ca href=\"https://dnschecker.org/\"\u003ehttps://dnschecker.org/\u003c/a\u003e you can check whether the TXT entries are recognized. Fill in \u003cem\u003e_gitlab-pages-verification-code.www.myname.com\u003c/em\u003e and select \u003cem\u003eTXT\u003c/em\u003e.\u003c/p\u003e","date_modified":"2025-05-19T15:40:36Z","date_published":"2025-05-19T15:40:36Z","id":"http://localhost:1313/blog/verification-of-your-subdomain-for-gitlab-project/","summary":"\u003cp\u003eYou have a project on gitlab with the URL \u003cem\u003emyname.gitlab.io/project\u003c/em\u003e and would now like to redirect your subdomain \u003cem\u003e\u003ca href=\"https://www.myname.com\"\u003ewww.myname.com\u003c/a\u003e\u003c/em\u003e to your project in addition to your root domain \u003cem\u003emyname.com\u003c/em\u003e.\u003c/p\u003e","tags":["hugo","blogging"],"title":"Verification of your Subdomain for a gitlab Project","url":"http://localhost:1313/blog/verification-of-your-subdomain-for-gitlab-project/"},{"content_html":"\u003cp\u003eUm Visual Studio Code als Quelltext-Editor für DITA-XML-Dateien mit allen Annehmlichkeiten wie z.B. der Validierung nutzen zu können, müssen in den Einstellungen des Programms, genauer in der \u003ccode\u003esettings.json\u003c/code\u003e, drei Einträge vorgenommen werden.\u003c/p\u003e\n\u003cp\u003eDamit ich bei der nächsten PC-Einrichtung nicht wieder anfange zu suchen, schreibe ich es jetzt auf.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/no-validation.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eLeider weiß ich nicht immer, welche DITA-Tags in welche Reihenfolge gehören. Eine zeitnahe Validierung der DITA-Synstax ist also sehr hilfreich.\u003c/p\u003e\n\u003cp\u003eQuellen:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://stackoverflow.com/questions/64782816/how-can-i-make-dita-catalog-xml-work-in-vs-code\"\u003eHow can I make dita-catalog.xml work in vscode\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.baeldung.com/find-java-home\"\u003eHow to find JAVA_HOME\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"einstellungen-von-vs-code-komplettieren\"\u003eEinstellungen von VS Code komplettieren\u003c/h3\u003e\n\u003c!-- FM:Snippet:Start data:{\"id\":\"Admonition - Voraussetzung\",\"fields\":[]} --\u003e\n\u003cstyle type=\"text/css\"\u003e\n     \n    .notice {\n        --title-color: #fff;\n        --title-background-color: #6be;\n        --content-color: #444;\n        --content-background-color: #e7f2fa;\n    }\n\n    .notice.comment {\n        --title-background-color: #99bda2;\n        --content-background-color: #efe;\n    }\n\n    .notice.info {\n        --title-background-color: #fb7;\n        --content-background-color: #fec;\n    }\n\n    .notice.tip {\n        --title-background-color: #5a5;\n        --content-background-color: #efe;\n    }\n\n    .notice.warning {\n        --title-background-color: #c33;\n        --content-background-color: #fee;\n    }\n\n\n     \n    .notice {\n        padding: 18px;\n        line-height: 24px;\n        margin-bottom: 24px;\n        margin-top: 26px;\n        border-radius: 4px;\n        color: var(--content-color);\n        background: var(--content-background-color);\n    }\n\n    .notice p:last-child {\n        margin-bottom: 0\n    }\n\n     \n    .notice-title {\n        margin: -18px -18px 12px;\n        padding: 4px 18px;\n        border-radius: 4px 4px 0 0;\n        font-weight: 700;\n        color: var(--title-color);\n        background: var(--title-background-color);\n    }\n\n     \n    .icon-notice {\n        display: inline-flex;\n        align-self: center;\n        margin-right: 8px;\n    }\n\n    .icon-notice img,\n    .icon-notice svg {\n        height: 1em;\n        width: 1em;\n        fill: currentColor;\n    }\n\n    .icon-notice img,\n    .icon-notice.baseline svg {\n        top: .125em;\n        position: relative;\n    }\n\u003c/style\u003e\u003cdiv class=\"notice info\" \u003e\n    \u003cp class=\"notice-title\"\u003e\n        \u003cspan class=\"icon-notice baseline\"\u003e\n            \u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"92 59.5 300 300\"\u003e\n  \u003cpath d=\"M292 303.25V272c0-3.516-2.734-6.25-6.25-6.25H267v-100c0-3.516-2.734-6.25-6.25-6.25h-62.5c-3.516 0-6.25 2.734-6.25 6.25V197c0 3.516 2.734 6.25 6.25 6.25H217v62.5h-18.75c-3.516 0-6.25 2.734-6.25 6.25v31.25c0 3.516 2.734 6.25 6.25 6.25h87.5c3.516 0 6.25-2.734 6.25-6.25Zm-25-175V97c0-3.516-2.734-6.25-6.25-6.25h-37.5c-3.516 0-6.25 2.734-6.25 6.25v31.25c0 3.516 2.734 6.25 6.25 6.25h37.5c3.516 0 6.25-2.734 6.25-6.25Zm125 81.25c0 82.813-67.188 150-150 150-82.813 0-150-67.188-150-150 0-82.813 67.188-150 150-150 82.813 0 150 67.188 150 150Z\"/\u003e\n\u003c/svg\u003e\n\n        \u003c/span\u003eVoraussetzung\u003c/p\u003e\u003cp\u003eSie haben Java und ein DITA-Open-Toolkit installiert.\u003c/p\u003e\u003c/div\u003e\n\n\u003c!-- FM:Snippet:End --\u003e\n\u003cp\u003eEs gilt, diese drei Einstellungen hinzuzufügen:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003ePfad zum Java-Programm\u003c/li\u003e\n\u003cli\u003ePfad zur Datei \u003ccode\u003ecatalog-dita.xml\u003c/code\u003e im DITA-OT-Verzeichnis\u003c/li\u003e\n\u003cli\u003eAktiveren des Kontrollkästchen \u003cem\u003exml.validation.resolveExternalEntities\u003c/em\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch4 id=\"1-pfad-zum-java-programm\"\u003e(1) Pfad zum Java-Programm\u003c/h4\u003e\n\u003cp\u003eDa ich mit Linux Fedora arbeite, gab \u003ca target=\"_blank\" href=\"https://www.baeldung.com/find-java-home\"\u003edieser Befehl\u003c/a\u003e\nim Terminal-Fenster meinen JAVA_HOME-Pfad zurück:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ java -XshowSettings:properties -version 2\u0026gt;\u0026amp;1 \u0026gt; /dev/null | grep \u0026#39;java.home\u0026#39;\n\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"2-pfad-zur-catalog-datei\"\u003e(2) Pfad zur catalog-Datei\u003c/h4\u003e\n\u003cp\u003eDa ich mit Linux Fedora arbeite, diese Syntax der Schrägstriche.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u0026#34;xml.catalogs\u0026#34;: [\n\t\u0026#34;/home/andreas/Programme/dita-ot-4.1.2/catalog-dita.xml\u0026#34;\n],\n\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"3-kontrollkästchen-für-validation-aktiveren\"\u003e(3) Kontrollkästchen für Validation aktiveren\u003c/h4\u003e\n\u003cp\u003eIn der Oberfläche das Kontrollkästchen aktiveren für \u003cem\u003exml.validation.resolveExternalEntities\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/kontrollkaestchen-aktivieren.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eZum Schluss VS Code neu starten.\u003c/p\u003e\n\u003ch4 id=\"erbebnis\"\u003eErbebnis\u003c/h4\u003e\n\u003cp\u003eIn der Datei \u003ccode\u003esettings.json\u003c/code\u003e sah die Notation bei mir so aus:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u0026#34;xml.catalogs\u0026#34;: [\n\t\u0026#34;/home/andreas/Programme/dita-ot-4.1.2/catalog-dita.xml\u0026#34;\n],\n\u0026#34;xml.java.home\u0026#34;: \u0026#34;/usr/lib/jvm/java-21-openjdk\u0026#34;,\n\u0026#34;xml.validation.resolveExternalEntities\u0026#34;: true\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eJetzt bekomme ich sofort Fehlerhinweise, wenn meine DITA-Syntax nicht stimmt. Auch werden mir beim Schreiben im Kontextmenü mögliche korrekte Tags vorgeschlagen. Ein entspannteres Arbeiten als DITA-Redakteur ist möglich.\u003c/p\u003e","date_modified":"2025-04-02T19:31:50Z","date_published":"2025-04-02T19:31:50Z","id":"http://localhost:1313/blog/dita-xml-mit-vscode-validieren/","summary":"\u003cp\u003eUm Visual Studio Code als Quelltext-Editor für DITA-XML-Dateien mit allen Annehmlichkeiten wie z.B. der Validierung nutzen zu können, müssen in den Einstellungen des Programms, genauer in der \u003ccode\u003esettings.json\u003c/code\u003e, drei Einträge vorgenommen werden.\u003c/p\u003e","tags":["dita-xml","techcomm"],"title":"DITA-XML mit VS Code validieren","url":"http://localhost:1313/blog/dita-xml-mit-vscode-validieren/"},{"content_html":"\u003cp\u003eAuf Anraten eines sehr guten Bekannten habe ich mir ein modulares Notebook bei \u003ca href=\"https://www.frame.work\"\u003eframe.work\u003c/a\u003e bestellt. Da wir Arbeitsspeicher und SSD-Festplatte woanders ein wenig billiger bekommen, bestellen wir das Notebook ohne jeden Speicher.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/status-framework-750.jpg\" alt=\"Framework Notebook\"\u003e\u003c/p\u003e\n\u003cp\u003eDas geniale ist die Modularität. Framework verkauft keinen Monolithen, sondern Einzelteile. Ob ich mir das als Dekoration an die Stehlampe hänge, interessiert Framework nicht.\u003c/p\u003e\n\u003cp\u003eUnd weil alles modular ist, habe ich mir neben einer HDMI-Buchse auch 2 USB-C-Buchsen und 2 normale USB-Buchsen bestellt. Das Gehäuse hat 4 Einschübe. Sitze ich im Arbeitszimmer, kommt die HDMI-Buchse in einen Einschub und eine USB-Buchse raus. Im Bild rechts zu sehen die 5 Minipäckchen für die Anschluss-Buchsen in der Schachtel.\u003c/p\u003e\n\u003cp\u003eIn Zukunft nur noch Baukastensystem. Worauf läßt sich das Prinzip noch übertragen?\u003c/p\u003e","date_modified":"2025-02-08T18:47:47Z","date_published":"2025-02-08T18:47:47Z","id":"http://localhost:1313/status/framework/","summary":"\u003cp\u003eAuf Anraten eines sehr guten Bekannten habe ich mir ein modulares Notebook bei \u003ca href=\"https://www.frame.work\"\u003eframe.work\u003c/a\u003e bestellt. Da wir Arbeitsspeicher und SSD-Festplatte woanders ein wenig billiger bekommen, bestellen wir das Notebook ohne jeden Speicher.\u003c/p\u003e","tags":["darumlebenwir"],"title":"Framework","url":"http://localhost:1313/status/framework/"},{"content_html":"\u003cp\u003eIch habe es ja geahnt.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/status-maengelexemplar.png\" alt=\"Glückliche sind Mängelexemplare\"\u003e\u003c/p\u003e\n","date_modified":"2025-02-07T18:37:28Z","date_published":"2025-02-07T18:37:28Z","id":"http://localhost:1313/status/maengelexemplar/","summary":"Ich habe es ja geahnt.","tags":["darumlebenwir"],"title":"Mängelexemplar","url":"http://localhost:1313/status/maengelexemplar/"},{"content_html":"\u003cp\u003emacht man sich selbst.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/netlify-build.png\" alt=\"Netlify-Build erfolgreich\"\u003e\u003c/p\u003e\n\u003cp\u003eIch habe meinen Zettelkasten von DITA-XML in Markdown umgewandelt und will ihn hier weiter fortführen. Dabei hatte es einige Fehler gegeben. Gottseidank habe ich bei Netlify das Buildprotokoll gefunden und konnte alles wieder geradebiegen.\u003c/p\u003e\n","date_modified":"2025-01-01T17:40:08Z","date_published":"2025-01-01T17:40:08Z","id":"http://localhost:1313/status/die-schoensten-geschenke/","summary":"macht man sich selbst.\nIch habe meinen Zettelkasten von DITA-XML in Markdown umgewandelt und will ihn hier weiter fortführen. Dabei hatte es einige Fehler gegeben. Gottseidank habe ich bei Netlify das Buildprotokoll gefunden und konnte alles wieder geradebiegen.","tags":["darumlebenwir","hugo"],"title":"Die schönsten Geschenke","url":"http://localhost:1313/status/die-schoensten-geschenke/"},{"content_html":"\u003cp\u003eIn Markdown gibt es keine Möglichkeit, farbig umrahmte Absätze für Hinweise, Warnungen, Infos und Tipps zu gestalten. In Hugo bietet sich aber diese Möglichkeit durch sogenannte Shortcodes.\u003c/p\u003e\n\u003cp\u003eSogenannte Shortcodes werden in einer HTML-Datei abgelegt und müssen im Markdown-Content auf spezielle Weise eingefügt werden.\u003c/p\u003e\n\u003cp\u003eQuelle: \u003ca target=\"_blank\" href=\"https://github.com/martignoni/hugo-notice\"\u003ehugo-notice von Nicolas Martignoni\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"anleitung\"\u003eAnleitung\u003c/h2\u003e\n\u003cp\u003eDa ich mein Template \u003cstrong\u003enicht\u003c/strong\u003e im Ordner \u003ccode\u003ethemes\u003c/code\u003e als git-submodule betreibe, kopiere ich alles in meinen lokalen \u003ccode\u003elayouts\u003c/code\u003e-Ordner und synchronisiere diesen zugleich mit meinen Content-Dateien.\u003c/p\u003e\n\u003cstyle type=\"text/css\"\u003e\n     \n    .notice {\n        --title-color: #fff;\n        --title-background-color: #6be;\n        --content-color: #444;\n        --content-background-color: #e7f2fa;\n    }\n\n    .notice.comment {\n        --title-background-color: #99bda2;\n        --content-background-color: #efe;\n    }\n\n    .notice.info {\n        --title-background-color: #fb7;\n        --content-background-color: #fec;\n    }\n\n    .notice.tip {\n        --title-background-color: #5a5;\n        --content-background-color: #efe;\n    }\n\n    .notice.warning {\n        --title-background-color: #c33;\n        --content-background-color: #fee;\n    }\n\n\n     \n    .notice {\n        padding: 18px;\n        line-height: 24px;\n        margin-bottom: 24px;\n        margin-top: 26px;\n        border-radius: 4px;\n        color: var(--content-color);\n        background: var(--content-background-color);\n    }\n\n    .notice p:last-child {\n        margin-bottom: 0\n    }\n\n     \n    .notice-title {\n        margin: -18px -18px 12px;\n        padding: 4px 18px;\n        border-radius: 4px 4px 0 0;\n        font-weight: 700;\n        color: var(--title-color);\n        background: var(--title-background-color);\n    }\n\n     \n    .icon-notice {\n        display: inline-flex;\n        align-self: center;\n        margin-right: 8px;\n    }\n\n    .icon-notice img,\n    .icon-notice svg {\n        height: 1em;\n        width: 1em;\n        fill: currentColor;\n    }\n\n    .icon-notice img,\n    .icon-notice.baseline svg {\n        top: .125em;\n        position: relative;\n    }\n\u003c/style\u003e\u003cdiv class=\"notice info\" \u003e\n    \u003cp class=\"notice-title\"\u003e\n        \u003cspan class=\"icon-notice baseline\"\u003e\n            \u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"92 59.5 300 300\"\u003e\n  \u003cpath d=\"M292 303.25V272c0-3.516-2.734-6.25-6.25-6.25H267v-100c0-3.516-2.734-6.25-6.25-6.25h-62.5c-3.516 0-6.25 2.734-6.25 6.25V197c0 3.516 2.734 6.25 6.25 6.25H217v62.5h-18.75c-3.516 0-6.25 2.734-6.25 6.25v31.25c0 3.516 2.734 6.25 6.25 6.25h87.5c3.516 0 6.25-2.734 6.25-6.25Zm-25-175V97c0-3.516-2.734-6.25-6.25-6.25h-37.5c-3.516 0-6.25 2.734-6.25 6.25v31.25c0 3.516 2.734 6.25 6.25 6.25h37.5c3.516 0 6.25-2.734 6.25-6.25Zm125 81.25c0 82.813-67.188 150-150 150-82.813 0-150-67.188-150-150 0-82.813 67.188-150 150-150 82.813 0 150 67.188 150 150Z\"/\u003e\n\u003c/svg\u003e\n\n        \u003c/span\u003eVoraussetzung\u003c/p\u003e\u003cp\u003eSie müssen in der \u003ccode\u003econfig.toml\u003c/code\u003e angeben, ob Sie auf Ihrer Webseite mit einer Standardsprache arbeiten, oder mehrere, nahezu gleichberechtigte Sprachen nutzen. Da ich Deutsch als Standardsprache nutze, habe ich in die \u003ccode\u003econfig.toml\u003c/code\u003e diesen Eintrag hinzugefügt: \u003ccode\u003edefaultContentLanguage = 'de'\u003c/code\u003e.\u003c/p\u003e\u003c/div\u003e\n\n\u003ch3 id=\"einmaliges-einrichten\"\u003eEinmaliges Einrichten\u003c/h3\u003e\n\u003cp\u003e\u003cstrong\u003e(1)\u003c/strong\u003e - Laden Sie das Zip-Archiv vom \u003ca href=\"https://github.com/martignoni/hugo-notice\"\u003egit-Repository hugo-notice\u003c/a\u003e herunter und entpacken Sie es.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e(2)\u003c/strong\u003e - Legen Sie die Datei \u003ccode\u003enotice.html\u003c/code\u003e in den Ordner \u003ccode\u003elayouts/shortcodes\u003c/code\u003e ab.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e(3)\u003c/strong\u003e - Kopieren Sie den Ordner \u003ccode\u003eicons\u003c/code\u003e in Ihren Hauptordner des Repositorys, also auf gleicher Ebene wie den den Ordner \u003ccode\u003elayouts\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e(4)\u003c/strong\u003e - Kopieren Sie den Ordner \u003ccode\u003ei18n\u003c/code\u003e in Ihren Hauptordner des Repositorys, also auf gleicher Ebene wie den den Ordner \u003ccode\u003elayouts\u003c/code\u003e. Löschen Sie die Dateien für die Sprachen, die Sie bestimmt nicht nutzen. Bei mir blieb nur die \u003ccode\u003ede.yaml\u003c/code\u003e übrig.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e(5)\u003c/strong\u003e - Editieren Sie im Ordner \u003ccode\u003ei18n\u003c/code\u003e die Datei \u003ccode\u003ede.yaml\u003c/code\u003e, so denn nötig. Ich habe z.B. die Übersetzung vom gelben Kasten \u003cem\u003eInformation\u003c/em\u003e auf \u003cem\u003eVoraussetzung\u003c/em\u003e geändert.\u003c/p\u003e\n\u003ch3 id=\"anwenden-im-markdown-content\"\u003eAnwenden im Markdown-Content\u003c/h3\u003e\n\u003cp\u003eSobald Sie die Admonitions benutzen möchten, fügen Sie z.B. für obiges gelbes Kästchen folgende Notation in Ihre Content-Datei ein:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e{{\u0026lt; notice info \u0026gt;}}\nSie müssen in der `config.toml` angeben, ob Sie auf Ihrer Webseite ...\n{{\u0026lt; /notice \u0026gt;}}\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"beispiel-für-eine-warnung\"\u003eBeispiel für eine Warnung\u003c/h3\u003e\n\u003cdiv class=\"notice warning\" \u003e\n    \u003cp class=\"notice-title\"\u003e\n        \u003cspan class=\"icon-notice baseline\"\u003e\n            \u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"126 76.5 300 300\"\u003e\n  \u003cpath d=\"M297.431 324.397v-34.255c0-3.245-2.344-5.95-5.358-5.95h-32.146c-3.014 0-5.358 2.705-5.358 5.95v34.255c0 3.245 2.344 5.95 5.358 5.95h32.146c3.014 0 5.358-2.705 5.358-5.95Zm-.335-67.428 3.014-82.753c0-1.081-.502-2.524-1.674-3.425-1.005-.902-2.512-1.983-4.019-1.983h-36.834c-1.507 0-3.014 1.081-4.019 1.983-1.172.901-1.674 2.704-1.674 3.786l2.846 82.392c0 2.344 2.512 4.146 5.693 4.146h30.975c3.013 0 5.525-1.803 5.692-4.146Zm-2.344-168.39L423.34 342.425c3.683 7.032 3.516 15.686-.335 22.717-3.85 7.031-10.883 11.358-18.417 11.358H147.413c-7.534 0-14.566-4.327-18.417-11.358-3.85-7.031-4.018-15.685-.335-22.716L257.248 88.578C260.93 81.188 268.13 76.5 276 76.5c7.87 0 15.069 4.688 18.752 12.08Z\"/\u003e\n\u003c/svg\u003e\n\n        \u003c/span\u003eWarnung\u003c/p\u003e\u003cp\u003eThis is a warning notice. Be warned!\u003c/p\u003e\u003c/div\u003e\n\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e{{\u0026lt; notice warning \u0026gt;}}\nThis is a warning notice. Be warned!\n{{\u0026lt; /notice \u0026gt;}}\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"weitere-quellen\"\u003eWeitere Quellen\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://discourse.gohugo.io/t/i-need-help-with-i18n-translate-shortcode/39858\"\u003eFehler bei Übersetzungen von Shortcodes \u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://gohugo.io/templates/shortcode/\"\u003egohugo.io - Create your own shortcodes\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","date_modified":"2024-12-07T11:38:27Z","date_published":"2024-12-07T11:38:27Z","id":"http://localhost:1313/blog/hugo-admonitions-in-markdown/","summary":"\u003cp\u003eIn Markdown gibt es keine Möglichkeit, farbig umrahmte Absätze für Hinweise, Warnungen, Infos und Tipps zu gestalten. In Hugo bietet sich aber diese Möglichkeit durch sogenannte Shortcodes.\u003c/p\u003e","tags":["hugo","techcomm","blogging"],"title":"Admonitions in Markdown","url":"http://localhost:1313/blog/hugo-admonitions-in-markdown/"},{"content_html":"\u003cp\u003eBisher habe ich meine Asciidoc- und Markdown-Dateien in VSCode erstellt. Das macht aber nicht so viel Spaß. Nun habe ich das \u003ca href=\"https://route360.dev/en/post/frontmatter-cms/\"\u003eHeadless-CMS\u003c/a\u003e FrontMatter entdeckt. Statt zu tippen klicke ich jetzt auf Schaltflächen.\u003c/p\u003e\n\u003cp\u003eErstellen Sie schnell auf Grundlage einer Markdown-Datei (template) eine Kopie dieser mit neuem Dateinamen. Die Dokumentation spricht zwar vom Einsatz von Templates. Aber nirgendwo steht, wie man die eingerichteten Templates benutzt! Bis ich die Vorgehensweise zufällig im Video \u003cem\u003eHow you can use content-types in Front Matter CMS\u003c/em\u003e vom Entwickler Elio Struyf entdeckte.\u003c/p\u003e\n\u003cstyle type=\"text/css\"\u003e\n     \n    .notice {\n        --title-color: #fff;\n        --title-background-color: #6be;\n        --content-color: #444;\n        --content-background-color: #e7f2fa;\n    }\n\n    .notice.comment {\n        --title-background-color: #99bda2;\n        --content-background-color: #efe;\n    }\n\n    .notice.info {\n        --title-background-color: #fb7;\n        --content-background-color: #fec;\n    }\n\n    .notice.tip {\n        --title-background-color: #5a5;\n        --content-background-color: #efe;\n    }\n\n    .notice.warning {\n        --title-background-color: #c33;\n        --content-background-color: #fee;\n    }\n\n\n     \n    .notice {\n        padding: 18px;\n        line-height: 24px;\n        margin-bottom: 24px;\n        margin-top: 26px;\n        border-radius: 4px;\n        color: var(--content-color);\n        background: var(--content-background-color);\n    }\n\n    .notice p:last-child {\n        margin-bottom: 0\n    }\n\n     \n    .notice-title {\n        margin: -18px -18px 12px;\n        padding: 4px 18px;\n        border-radius: 4px 4px 0 0;\n        font-weight: 700;\n        color: var(--title-color);\n        background: var(--title-background-color);\n    }\n\n     \n    .icon-notice {\n        display: inline-flex;\n        align-self: center;\n        margin-right: 8px;\n    }\n\n    .icon-notice img,\n    .icon-notice svg {\n        height: 1em;\n        width: 1em;\n        fill: currentColor;\n    }\n\n    .icon-notice img,\n    .icon-notice.baseline svg {\n        top: .125em;\n        position: relative;\n    }\n\u003c/style\u003e\u003cdiv class=\"notice tip\" \u003e\n    \u003cp class=\"notice-title\"\u003e\n        \u003cspan class=\"icon-notice baseline\"\u003e\n            \u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"300.5 134 300 300\"\u003e\n  \u003cpath d=\"M551.281 252.36c0-3.32-1.172-6.641-3.515-8.985l-17.774-17.578c-2.344-2.344-5.469-3.711-8.789-3.711-3.32 0-6.445 1.367-8.789 3.71l-79.687 79.493-44.141-44.14c-2.344-2.344-5.469-3.712-8.79-3.712-3.32 0-6.444 1.368-8.788 3.711l-17.774 17.579c-2.343 2.343-3.515 5.664-3.515 8.984 0 3.32 1.172 6.445 3.515 8.789l70.704 70.703c2.343 2.344 5.664 3.711 8.789 3.711 3.32 0 6.64-1.367 8.984-3.71l106.055-106.056c2.343-2.343 3.515-5.468 3.515-8.789ZM600.5 284c0 82.813-67.188 150-150 150-82.813 0-150-67.188-150-150 0-82.813 67.188-150 150-150 82.813 0 150 67.188 150 150Z\"/\u003e\n\u003c/svg\u003e\n\n        \u003c/span\u003eTipp\u003c/p\u003e\u003cp\u003eWenn Sie vorhaben, über die Schaltfläche \u003cem\u003eCreate Template\u003c/em\u003e ein Template zu erstellen, sichern Sie sich zuvor die Datei \u003ccode\u003efrontmatter.json\u003c/code\u003e. Denn diese Vorgehensweise überschreibt gern diese Datei. Die folgende Anleitung verzichtet auf den Einsatz dieser Aktionsschaltfläche.\u003c/p\u003e\u003c/div\u003e\n\n\u003ch3 id=\"template-erstellen\"\u003eTemplate erstellen\u003c/h3\u003e\n\u003cp\u003e\u003cstrong\u003e(1)\u003c/strong\u003e - Erstellen Sie einmalig einen Ordner \u003ccode\u003e.frontmatter/templates\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e(2)\u003c/strong\u003e - Kopieren Sie eine Markdown-Datei in diesen neuen Ordner \u003ccode\u003etemplates\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e(3)\u003c/strong\u003e - Passen Sie die Datei so an, dass sie Ihren Vorstellungen eines Templates enspricht. \u003ca href=\"https://frontmatter.codes/docs/content-creation/placeholders\"\u003ePlatzhalter\u003c/a\u003e wie in der Datei \u003ccode\u003efrontmatter.json\u003c/code\u003e sind nicht möglich.\u003c/p\u003e\n\u003cp\u003eSie können beliebig viele Template-Dateien erstellen. Beim Benutzen der Templates werden diese Ihnen in einer Auswahlliste angeboten.\u003c/p\u003e\n\u003ch3 id=\"template-benutzen\"\u003eTemplate benutzen\u003c/h3\u003e\n\u003cp\u003e\u003cstrong\u003e(1)\u003c/strong\u003e - Klicken Sie in der linken Symbolschaltflächen-Leiste auf das Icon \u003cem\u003eExplorer\u003c/em\u003e und wechseln Sie in den VSCode-Dateiexplorer.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e(2)\u003c/strong\u003e - Machen Sie einen rechten Mausklick auf den Content-Ordner, in der die neue Markdown-Datei angelegt werden soll. Z.B. \u003ccode\u003econtent/blog\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e(3)\u003c/strong\u003e - Wählen Sie im Kontextmenü den Eintrag \u003cem\u003eFrontmatter \u0026gt; New Article from template\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e(4)\u003c/strong\u003e - Wählen Sie die entsprechende Template-Datei aus, auf dessen Grundlage die neue Datei entstehen soll.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e(5)\u003c/strong\u003e - Editieren Sie die Datei wie gewohnt und passen Sie den YAML-Header an.\u003c/p\u003e\n\u003ch3 id=\"weitere-quellen\"\u003eWeitere Quellen\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/watch?v=oA5ocNaiAtY\"\u003eVideo: How you can use content-types in Front Matter CMS\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://frontmatter.codes/\"\u003eFrontmatter CMS\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","date_modified":"2024-12-04T19:41:27Z","date_published":"2024-12-04T19:41:27Z","id":"http://localhost:1313/blog/templates-nutzen-in-frontmatter-cms/","summary":"\u003cp\u003eBisher habe ich meine Asciidoc- und Markdown-Dateien in VSCode erstellt. Das macht aber nicht so viel Spaß. Nun habe ich das \u003ca href=\"https://route360.dev/en/post/frontmatter-cms/\"\u003eHeadless-CMS\u003c/a\u003e FrontMatter entdeckt. Statt zu tippen klicke ich jetzt auf Schaltflächen.\u003c/p\u003e","tags":["hugo","blogging"],"title":"Templates nutzen in FrontMatter CMS","url":"http://localhost:1313/blog/templates-nutzen-in-frontmatter-cms/"},{"content_html":"\u003cp\u003eIn Markdown kann man standardmäßig nur Links zu Webseiten erstellen, die im selben Tab öffnen, nicht jedoch in einem neuen Tab geöffnet werden mit Hilfe des Attributs \u003ccode\u003etarget=\u0026quot;_blank\u0026quot;\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eDa ich inzwischen für das Schreiben meiner Hugo-Blogposts das Headless-CMS \u003ca href=\"https://frontmatter.codes\"\u003eFrontmatter\u003c/a\u003e nutze, möchte ich für einfache Texte wieder vermehrt Markdown nutzen.\u003c/p\u003e\n\u003cp\u003eQuelle: \u003ca href=\"https://discourse.gohugo.io/t/how-to-target--blank-in-md/524/19\"\u003eHow to target blank in md?\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"anleitung\"\u003eAnleitung\u003c/h3\u003e\n\u003cp\u003eDas Attribut \u003ccode\u003etarget=\u0026quot;_blank\u0026quot;\u003c/code\u003e kann man mit Hilfe von Hugo-Shortcodes realisieren.\u003c/p\u003e\n\u003cstyle type=\"text/css\"\u003e\n     \n    .notice {\n        --title-color: #fff;\n        --title-background-color: #6be;\n        --content-color: #444;\n        --content-background-color: #e7f2fa;\n    }\n\n    .notice.comment {\n        --title-background-color: #99bda2;\n        --content-background-color: #efe;\n    }\n\n    .notice.info {\n        --title-background-color: #fb7;\n        --content-background-color: #fec;\n    }\n\n    .notice.tip {\n        --title-background-color: #5a5;\n        --content-background-color: #efe;\n    }\n\n    .notice.warning {\n        --title-background-color: #c33;\n        --content-background-color: #fee;\n    }\n\n\n     \n    .notice {\n        padding: 18px;\n        line-height: 24px;\n        margin-bottom: 24px;\n        margin-top: 26px;\n        border-radius: 4px;\n        color: var(--content-color);\n        background: var(--content-background-color);\n    }\n\n    .notice p:last-child {\n        margin-bottom: 0\n    }\n\n     \n    .notice-title {\n        margin: -18px -18px 12px;\n        padding: 4px 18px;\n        border-radius: 4px 4px 0 0;\n        font-weight: 700;\n        color: var(--title-color);\n        background: var(--title-background-color);\n    }\n\n     \n    .icon-notice {\n        display: inline-flex;\n        align-self: center;\n        margin-right: 8px;\n    }\n\n    .icon-notice img,\n    .icon-notice svg {\n        height: 1em;\n        width: 1em;\n        fill: currentColor;\n    }\n\n    .icon-notice img,\n    .icon-notice.baseline svg {\n        top: .125em;\n        position: relative;\n    }\n\u003c/style\u003e\u003cdiv class=\"notice info\" \u003e\n    \u003cp class=\"notice-title\"\u003e\n        \u003cspan class=\"icon-notice baseline\"\u003e\n            \u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"92 59.5 300 300\"\u003e\n  \u003cpath d=\"M292 303.25V272c0-3.516-2.734-6.25-6.25-6.25H267v-100c0-3.516-2.734-6.25-6.25-6.25h-62.5c-3.516 0-6.25 2.734-6.25 6.25V197c0 3.516 2.734 6.25 6.25 6.25H217v62.5h-18.75c-3.516 0-6.25 2.734-6.25 6.25v31.25c0 3.516 2.734 6.25 6.25 6.25h87.5c3.516 0 6.25-2.734 6.25-6.25Zm-25-175V97c0-3.516-2.734-6.25-6.25-6.25h-37.5c-3.516 0-6.25 2.734-6.25 6.25v31.25c0 3.516 2.734 6.25 6.25 6.25h37.5c3.516 0 6.25-2.734 6.25-6.25Zm125 81.25c0 82.813-67.188 150-150 150-82.813 0-150-67.188-150-150 0-82.813 67.188-150 150-150 82.813 0 150 67.188 150 150Z\"/\u003e\n\u003c/svg\u003e\n\n        \u003c/span\u003eVoraussetzung\u003c/p\u003e\u003cp\u003eDamit HTML-Code innerhalb der Markdown-Datei gerendert wird, muss einmalig in der \u003ccode\u003econfig.toml\u003c/code\u003e folgender Eintrag gemacht werden:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e[markup.goldmark.renderer]\nunsafe = true\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003cstrong\u003e(1)\u003c/strong\u003e - Erstellen Sie einen neuen Ordner \u003ccode\u003eshortcodes\u003c/code\u003e im Hugo-Verzeichnis \u003ccode\u003elayouts\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e(2)\u003c/strong\u003e - Erstellen Sie im neuen Verzeichnis eine neue HTML-Datei. Ich nenne sie wie im Beispiel unter Quellen \u003ccode\u003ea_blank.html\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e(3)\u003c/strong\u003e - Fügen Sie diesen Code hinein:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u0026lt;a target=\u0026#34;_blank\u0026#34; href=\u0026#34;{{ .Get 1 }}\u0026#34;\u0026gt;{{ .Get 0 | markdownify }}\u0026lt;/a\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003e(4)\u003c/strong\u003e - In der eigentlichen Markdown-Content-Datei fügen Sie den Shortcode folgendermaßen ein:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e{{% a_blank \u0026#34;Shortcodes linking\u0026#34; \u0026#34;https://www.petersell.de\u0026#34; %}}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eKlickt man jetzt auf diesen Link \u003ca target=\"_blank\" href=\"https://www.petersell.de\"\u003eShortcodes linking\u003c/a\u003e\n, öffnet sich die Webseite in einem neuen Tab.\u003c/p\u003e\n\u003ch4 id=\"weitere-quellen\"\u003eWeitere Quellen\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://discourse.gohugo.io/t/hugo-0-60-0-raw-html-omitted-issue/22010/7\"\u003eRaw HTML omitted Fehler\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://gohugo.io/templates/shortcode/\"\u003egohugo.io - Create your own shortcodes\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","date_modified":"2024-12-02T18:13:16Z","date_published":"2024-12-02T18:13:16Z","id":"http://localhost:1313/blog/hugo-cms-link-im-neuen-tab-oeffnen/","summary":"\u003cp\u003eIn Markdown kann man standardmäßig nur Links zu Webseiten erstellen, die im selben Tab öffnen, nicht jedoch in einem neuen Tab geöffnet werden mit Hilfe des Attributs \u003ccode\u003etarget=\u0026quot;_blank\u0026quot;\u003c/code\u003e.\u003c/p\u003e","tags":["hugo","blogging"],"title":"Hugo - Link im neuen Tab öffnen lassen","url":"http://localhost:1313/blog/hugo-cms-link-im-neuen-tab-oeffnen/"}]}